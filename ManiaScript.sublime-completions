{
    "scope": "source.ms", 
    "completions": [
        {
            "trigger": "Void", 
            "contents": "Void"
        }, 
        {
            "trigger": "Integer", 
            "contents": "Integer"
        }, 
        {
            "trigger": "Real", 
            "contents": "Real"
        }, 
        {
            "trigger": "Boolean", 
            "contents": "Boolean"
        }, 
        {
            "trigger": "Text", 
            "contents": "Text"
        }, 
        {
            "trigger": "Vec2", 
            "contents": "Vec2"
        }, 
        {
            "trigger": "Vec3", 
            "contents": "Vec3"
        }, 
        {
            "trigger": "Int3", 
            "contents": "Int3"
        }, 
        {
            "trigger": "Ident", 
            "contents": "Ident"
        }, 
        {
            "trigger": "CMlScript", 
            "contents": "CMlScript"
        }, 
        {
            "trigger": "CMlScript::LinkType::ExternalBrowser", 
            "contents": "CMlScript::LinkType::ExternalBrowser"
        }, 
        {
            "trigger": "CMlScript::LinkType::ManialinkBrowser", 
            "contents": "CMlScript::LinkType::ManialinkBrowser"
        }, 
        {
            "trigger": "CMlScript::LinkType::Goto", 
            "contents": "CMlScript::LinkType::Goto"
        }, 
        {
            "trigger": "CMlScript::LinkType::ExternalFromId", 
            "contents": "CMlScript::LinkType::ExternalFromId"
        }, 
        {
            "trigger": "CMlScript::LinkType::ManialinkFromId", 
            "contents": "CMlScript::LinkType::ManialinkFromId"
        }, 
        {
            "trigger": "CMlScript::LinkType::GotoFromId", 
            "contents": "CMlScript::LinkType::GotoFromId"
        }, 
        {
            "trigger": "CMlPage CMlScript.Page", 
            "contents": "Page"
        }, 
        {
            "trigger": "Boolean CMlScript.PageIsVisible", 
            "contents": "PageIsVisible"
        }, 
        {
            "trigger": "Integer CMlScript.Now", 
            "contents": "Now"
        }, 
        {
            "trigger": "Integer CMlScript.Period", 
            "contents": "Period"
        }, 
        {
            "trigger": "Integer CMlScript.CurrentTime", 
            "contents": "CurrentTime"
        }, 
        {
            "trigger": "Text CMlScript.CurrentTimeText", 
            "contents": "CurrentTimeText"
        }, 
        {
            "trigger": "Text CMlScript.CurrentLocalDateText", 
            "contents": "CurrentLocalDateText"
        }, 
        {
            "trigger": "CUser CMlScript.LocalUser", 
            "contents": "LocalUser"
        }, 
        {
            "trigger": "CTitle CMlScript.LoadedTitle", 
            "contents": "LoadedTitle"
        }, 
        {
            "trigger": "Real CMlScript.MouseX", 
            "contents": "MouseX"
        }, 
        {
            "trigger": "Real CMlScript.MouseY", 
            "contents": "MouseY"
        }, 
        {
            "trigger": "Boolean CMlScript.MouseLeftButton", 
            "contents": "MouseLeftButton"
        }, 
        {
            "trigger": "Boolean CMlScript.MouseRightButton", 
            "contents": "MouseRightButton"
        }, 
        {
            "trigger": "Boolean CMlScript.MouseMiddleButton", 
            "contents": "MouseMiddleButton"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyUp", 
            "contents": "KeyUp"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyDown", 
            "contents": "KeyDown"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyLeft", 
            "contents": "KeyLeft"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyRight", 
            "contents": "KeyRight"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyReturn", 
            "contents": "KeyReturn"
        }, 
        {
            "trigger": "Boolean CMlScript.KeySpace", 
            "contents": "KeySpace"
        }, 
        {
            "trigger": "Boolean CMlScript.KeyDelete", 
            "contents": "KeyDelete"
        }, 
        {
            "trigger": "Boolean CMlScript.IsKeyPressed(Integer KeyCode)", 
            "contents": "IsKeyPressed(${1:Integer KeyCode})"
        }, 
        {
            "trigger": "Boolean CMlScript.EnableMenuNavigationInputs", 
            "contents": "EnableMenuNavigationInputs"
        }, 
        {
            "trigger": "Void CMlScript.EnableMenuNavigation(Boolean EnableInputs, Boolean WithAutoFocus, CMlControl AutoBackControl, Integer InputPriority)", 
            "contents": "EnableMenuNavigation(${1:Boolean EnableInputs}, ${2:Boolean WithAutoFocus}, ${3:CMlControl AutoBackControl}, ${4:Integer InputPriority})"
        }, 
        {
            "trigger": "Boolean CMlScript.IsMenuNavigationForeground", 
            "contents": "IsMenuNavigationForeground"
        }, 
        {
            "trigger": "Void CMlScript.OpenLink(Text Url, LinkType LinkType)", 
            "contents": "OpenLink(${1:Text Url}, ${2:LinkType LinkType})"
        }, 
        {
            "trigger": "Void CMlScript.TriggerPageAction(Text ActionString)", 
            "contents": "TriggerPageAction(${1:Text ActionString})"
        }, 
        {
            "trigger": "CXmlManager CMlScript.Xml", 
            "contents": "Xml"
        }, 
        {
            "trigger": "CHttpManager CMlScript.Http", 
            "contents": "Http"
        }, 
        {
            "trigger": "CAudioManager CMlScript.Audio", 
            "contents": "Audio"
        }, 
        {
            "trigger": "Void CMlScript.SendCustomEvent(Text Type, Text[] Data)", 
            "contents": "SendCustomEvent(${1:Text Type}, ${2:Text[] Data})"
        }, 
        {
            "trigger": "Void CMlScript.PreloadImage(Text ImageUrl)", 
            "contents": "PreloadImage(${1:Text ImageUrl})"
        }, 
        {
            "trigger": "CMlEntry", 
            "contents": "CMlEntry"
        }, 
        {
            "trigger": "Text CMlEntry.Value", 
            "contents": "Value"
        }, 
        {
            "trigger": "Void CMlEntry.StartEdition()", 
            "contents": "StartEdition()"
        }, 
        {
            "trigger": "Integer CMlEntry.MaxLine", 
            "contents": "MaxLine"
        }, 
        {
            "trigger": "Boolean CMlEntry.AutoNewLine", 
            "contents": "AutoNewLine"
        }, 
        {
            "trigger": "CMlFileEntry", 
            "contents": "CMlFileEntry"
        }, 
        {
            "trigger": "Text CMlFileEntry.FullFileName", 
            "contents": "FullFileName"
        }, 
        {
            "trigger": "CMlLabel", 
            "contents": "CMlLabel"
        }, 
        {
            "trigger": "Text CMlLabel.Style", 
            "contents": "Style"
        }, 
        {
            "trigger": "Text CMlLabel.Substyle", 
            "contents": "Substyle"
        }, 
        {
            "trigger": "Text CMlLabel.TextFont", 
            "contents": "TextFont"
        }, 
        {
            "trigger": "Void CMlLabel.SetText(Text NewText)", 
            "contents": "SetText(${1:Text NewText})"
        }, 
        {
            "trigger": "Text CMlLabel.Value", 
            "contents": "Value"
        }, 
        {
            "trigger": "Integer CMlLabel.ValueLineCount", 
            "contents": "ValueLineCount"
        }, 
        {
            "trigger": "Integer CMlLabel.MaxLine", 
            "contents": "MaxLine"
        }, 
        {
            "trigger": "Boolean CMlLabel.AppendEllipsis", 
            "contents": "AppendEllipsis"
        }, 
        {
            "trigger": "Boolean CMlLabel.AutoNewLine", 
            "contents": "AutoNewLine"
        }, 
        {
            "trigger": "Real CMlLabel.Opacity", 
            "contents": "Opacity"
        }, 
        {
            "trigger": "Vec3 CMlLabel.TextColor", 
            "contents": "TextColor"
        }, 
        {
            "trigger": "Integer CMlLabel.TextSize", 
            "contents": "TextSize"
        }, 
        {
            "trigger": "Real CMlLabel.ComputeWidth(Text Text)", 
            "contents": "ComputeWidth(${1:Text Text})"
        }, 
        {
            "trigger": "CMlMediaPlayer", 
            "contents": "CMlMediaPlayer"
        }, 
        {
            "trigger": "CMlQuad", 
            "contents": "CMlQuad"
        }, 
        {
            "trigger": "CMlQuad::EKeepRatioMode::Inactive", 
            "contents": "CMlQuad::EKeepRatioMode::Inactive"
        }, 
        {
            "trigger": "CMlQuad::EKeepRatioMode::Clip", 
            "contents": "CMlQuad::EKeepRatioMode::Clip"
        }, 
        {
            "trigger": "CMlQuad::EKeepRatioMode::Fit", 
            "contents": "CMlQuad::EKeepRatioMode::Fit"
        }, 
        {
            "trigger": "Void CMlQuad.ChangeImageUrl(Text fieldName)", 
            "contents": "ChangeImageUrl(${1:Text fieldName})"
        }, 
        {
            "trigger": "Text CMlQuad.ImageUrl", 
            "contents": "ImageUrl"
        }, 
        {
            "trigger": "Text CMlQuad.ImageUrlFocus", 
            "contents": "ImageUrlFocus"
        }, 
        {
            "trigger": "Text CMlQuad.Style", 
            "contents": "Style"
        }, 
        {
            "trigger": "Text CMlQuad.Substyle", 
            "contents": "Substyle"
        }, 
        {
            "trigger": "Boolean CMlQuad.StyleSelected", 
            "contents": "StyleSelected"
        }, 
        {
            "trigger": "Boolean CMlQuad.DownloadInProgress", 
            "contents": "DownloadInProgress"
        }, 
        {
            "trigger": "Vec3 CMlQuad.Colorize", 
            "contents": "Colorize"
        }, 
        {
            "trigger": "Vec3 CMlQuad.ModulateColor", 
            "contents": "ModulateColor"
        }, 
        {
            "trigger": "Vec3 CMlQuad.BgColor", 
            "contents": "BgColor"
        }, 
        {
            "trigger": "Vec3 CMlQuad.BgColorFocus", 
            "contents": "BgColorFocus"
        }, 
        {
            "trigger": "Real CMlQuad.Opacity", 
            "contents": "Opacity"
        }, 
        {
            "trigger": "EKeepRatioMode CMlQuad.KeepRatio", 
            "contents": "KeepRatio"
        }, 
        {
            "trigger": "CMlGauge", 
            "contents": "CMlGauge"
        }, 
        {
            "trigger": "Text CMlGauge.Style", 
            "contents": "Style"
        }, 
        {
            "trigger": "Void CMlGauge.SetRatio(Real NewRatio)", 
            "contents": "SetRatio(${1:Real NewRatio})"
        }, 
        {
            "trigger": "Void CMlGauge.SetClan(Integer NewClan)", 
            "contents": "SetClan(${1:Integer NewClan})"
        }, 
        {
            "trigger": "Real CMlGauge.Ratio", 
            "contents": "Ratio"
        }, 
        {
            "trigger": "Real CMlGauge.GradingRatio", 
            "contents": "GradingRatio"
        }, 
        {
            "trigger": "Integer CMlGauge.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Vec3 CMlGauge.Color", 
            "contents": "Color"
        }, 
        {
            "trigger": "Boolean CMlGauge.DrawBackground", 
            "contents": "DrawBackground"
        }, 
        {
            "trigger": "Boolean CMlGauge.DrawBlockBackground", 
            "contents": "DrawBlockBackground"
        }, 
        {
            "trigger": "Boolean CMlGauge.CenteredBar", 
            "contents": "CenteredBar"
        }, 
        {
            "trigger": "CMlGraph", 
            "contents": "CMlGraph"
        }, 
        {
            "trigger": "Vec2 CMlGraph.CoordsMin", 
            "contents": "CoordsMin"
        }, 
        {
            "trigger": "Vec2 CMlGraph.CoordsMax", 
            "contents": "CoordsMax"
        }, 
        {
            "trigger": "CMlGraphCurve CMlGraph.AddCurve()", 
            "contents": "AddCurve()"
        }, 
        {
            "trigger": "Void CMlGraph.RemoveCurve(CMlGraphCurve Curve)", 
            "contents": "RemoveCurve(${1:CMlGraphCurve Curve})"
        }, 
        {
            "trigger": "CMlMinimap", 
            "contents": "CMlMinimap"
        }, 
        {
            "trigger": "Vec3 CMlMinimap.WorldPosition", 
            "contents": "WorldPosition"
        }, 
        {
            "trigger": "Vec2 CMlMinimap.MapPosition", 
            "contents": "MapPosition"
        }, 
        {
            "trigger": "Real CMlMinimap.MapYaw", 
            "contents": "MapYaw"
        }, 
        {
            "trigger": "Real CMlMinimap.ZoomFactor", 
            "contents": "ZoomFactor"
        }, 
        {
            "trigger": "CMlCamera", 
            "contents": "CMlCamera"
        }, 
        {
            "trigger": "CMlBrowser", 
            "contents": "CMlBrowser"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyAction::Add", 
            "contents": "CMlBrowser::EBuddyAction::Add"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyAction::Invite", 
            "contents": "CMlBrowser::EBuddyAction::Invite"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyAction::Remove", 
            "contents": "CMlBrowser::EBuddyAction::Remove"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyResult::Ok", 
            "contents": "CMlBrowser::EBuddyResult::Ok"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyResult::Error", 
            "contents": "CMlBrowser::EBuddyResult::Error"
        }, 
        {
            "trigger": "CMlBrowser::EBuddyResult::NotFinished", 
            "contents": "CMlBrowser::EBuddyResult::NotFinished"
        }, 
        {
            "trigger": "CMap CMlBrowser.CurMap", 
            "contents": "CurMap"
        }, 
        {
            "trigger": "Void CMlBrowser.ShowCurMapCard()", 
            "contents": "ShowCurMapCard()"
        }, 
        {
            "trigger": "EBuddyResult CMlBrowser.BuddyDoResult", 
            "contents": "BuddyDoResult"
        }, 
        {
            "trigger": "Text CMlBrowser.BuddyDoErrorMessage", 
            "contents": "BuddyDoErrorMessage"
        }, 
        {
            "trigger": "Boolean CMlBrowser.IsInBrowser", 
            "contents": "IsInBrowser"
        }, 
        {
            "trigger": "Void CMlBrowser.BrowserBack()", 
            "contents": "BrowserBack()"
        }, 
        {
            "trigger": "Void CMlBrowser.BrowserQuit()", 
            "contents": "BrowserQuit()"
        }, 
        {
            "trigger": "Void CMlBrowser.BrowserHome()", 
            "contents": "BrowserHome()"
        }, 
        {
            "trigger": "Void CMlBrowser.BrowserReload()", 
            "contents": "BrowserReload()"
        }, 
        {
            "trigger": "Text CMlBrowser.BrowserFocusedFrameId", 
            "contents": "BrowserFocusedFrameId"
        }, 
        {
            "trigger": "Void CMlBrowser.SetLocalUserClubLink(Text ClubLink)", 
            "contents": "SetLocalUserClubLink(${1:Text ClubLink})"
        }, 
        {
            "trigger": "CManiaApp", 
            "contents": "CManiaApp"
        }, 
        {
            "trigger": "CManiaApp::ELinkType::ExternalBrowser", 
            "contents": "CManiaApp::ELinkType::ExternalBrowser"
        }, 
        {
            "trigger": "CManiaApp::ELinkType::ManialinkBrowser", 
            "contents": "CManiaApp::ELinkType::ManialinkBrowser"
        }, 
        {
            "trigger": "Integer CManiaApp.Now", 
            "contents": "Now"
        }, 
        {
            "trigger": "Boolean CManiaApp.IsVisible", 
            "contents": "IsVisible"
        }, 
        {
            "trigger": "CUser CManiaApp.LocalUser", 
            "contents": "LocalUser"
        }, 
        {
            "trigger": "CTitle CManiaApp.LoadedTitle", 
            "contents": "LoadedTitle"
        }, 
        {
            "trigger": "Boolean CManiaApp.EnableMenuNavigationInputs", 
            "contents": "EnableMenuNavigationInputs"
        }, 
        {
            "trigger": "Real CManiaApp.MouseX", 
            "contents": "MouseX"
        }, 
        {
            "trigger": "Real CManiaApp.MouseY", 
            "contents": "MouseY"
        }, 
        {
            "trigger": "CUILayer CManiaApp.UILayerCreate()", 
            "contents": "UILayerCreate()"
        }, 
        {
            "trigger": "Void CManiaApp.UILayerDestroy(CUILayer Layer)", 
            "contents": "UILayerDestroy(${1:CUILayer Layer})"
        }, 
        {
            "trigger": "Void CManiaApp.UILayerDestroyAll()", 
            "contents": "UILayerDestroyAll()"
        }, 
        {
            "trigger": "Void CManiaApp.LayerCustomEvent(CUILayer Layer, Text Type, Text[] Data)", 
            "contents": "LayerCustomEvent(${1:CUILayer Layer}, ${2:Text Type}, ${3:Text[] Data})"
        }, 
        {
            "trigger": "Void CManiaApp.OpenLink(Text Url, ELinkType LinkType)", 
            "contents": "OpenLink(${1:Text Url}, ${2:ELinkType LinkType})"
        }, 
        {
            "trigger": "CXmlManager CManiaApp.Xml", 
            "contents": "Xml"
        }, 
        {
            "trigger": "CHttpManager CManiaApp.Http", 
            "contents": "Http"
        }, 
        {
            "trigger": "CAudioManager CManiaApp.Audio", 
            "contents": "Audio"
        }, 
        {
            "trigger": "CManiaAppEvent", 
            "contents": "CManiaAppEvent"
        }, 
        {
            "trigger": "CManiaAppEvent::EType::LayerCustomEvent", 
            "contents": "CManiaAppEvent::EType::LayerCustomEvent"
        }, 
        {
            "trigger": "CManiaAppEvent::EType::KeyPress", 
            "contents": "CManiaAppEvent::EType::KeyPress"
        }, 
        {
            "trigger": "CManiaAppEvent::EType::ExternalCustomEvent", 
            "contents": "CManiaAppEvent::EType::ExternalCustomEvent"
        }, 
        {
            "trigger": "CManiaAppEvent::EType::MenuNavigation", 
            "contents": "CManiaAppEvent::EType::MenuNavigation"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Up", 
            "contents": "CManiaAppEvent::EMenuNavAction::Up"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Right", 
            "contents": "CManiaAppEvent::EMenuNavAction::Right"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Left", 
            "contents": "CManiaAppEvent::EMenuNavAction::Left"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Down", 
            "contents": "CManiaAppEvent::EMenuNavAction::Down"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Select", 
            "contents": "CManiaAppEvent::EMenuNavAction::Select"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::Cancel", 
            "contents": "CManiaAppEvent::EMenuNavAction::Cancel"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::PageUp", 
            "contents": "CManiaAppEvent::EMenuNavAction::PageUp"
        }, 
        {
            "trigger": "CManiaAppEvent::EMenuNavAction::PageDown", 
            "contents": "CManiaAppEvent::EMenuNavAction::PageDown"
        }, 
        {
            "trigger": "EType CManiaAppEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "CUILayer CManiaAppEvent.CustomEventLayer", 
            "contents": "CustomEventLayer"
        }, 
        {
            "trigger": "Text CManiaAppEvent.CustomEventType", 
            "contents": "CustomEventType"
        }, 
        {
            "trigger": "Text CManiaAppEvent.ExternalEventType", 
            "contents": "ExternalEventType"
        }, 
        {
            "trigger": "EMenuNavAction CManiaAppEvent.MenuNavAction", 
            "contents": "MenuNavAction"
        }, 
        {
            "trigger": "Integer CManiaAppEvent.KeyCode", 
            "contents": "KeyCode"
        }, 
        {
            "trigger": "Text CManiaAppEvent.KeyName", 
            "contents": "KeyName"
        }, 
        {
            "trigger": "CManiaAppTitle", 
            "contents": "CManiaAppTitle"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Quit()", 
            "contents": "Menu_Quit()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Home()", 
            "contents": "Menu_Home()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Solo()", 
            "contents": "Menu_Solo()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Competitions()", 
            "contents": "Menu_Competitions()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Local()", 
            "contents": "Menu_Local()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Internet()", 
            "contents": "Menu_Internet()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Editor()", 
            "contents": "Menu_Editor()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.Menu_Profile()", 
            "contents": "Menu_Profile()"
        }, 
        {
            "trigger": "Void CManiaAppTitle.PlayMap(Text Map)", 
            "contents": "PlayMap(${1:Text Map})"
        }, 
        {
            "trigger": "Boolean CManiaAppTitle.LoadingScreenRequireKeyPressed", 
            "contents": "LoadingScreenRequireKeyPressed"
        }, 
        {
            "trigger": "Boolean CManiaAppTitle.DontScaleMainMenuForHMD", 
            "contents": "DontScaleMainMenuForHMD"
        }, 
        {
            "trigger": "CStation", 
            "contents": "CStation"
        }, 
        {
            "trigger": "CTitle CStation.Title", 
            "contents": "Title"
        }, 
        {
            "trigger": "Integer CStation.AudienceRegisteredUsers", 
            "contents": "AudienceRegisteredUsers"
        }, 
        {
            "trigger": "Integer CStation.CampaignMedalsMax", 
            "contents": "CampaignMedalsMax"
        }, 
        {
            "trigger": "Integer CStation.CampaignMedalsCurrent", 
            "contents": "CampaignMedalsCurrent"
        }, 
        {
            "trigger": "Integer CStation.CampaignMedalsRanking", 
            "contents": "CampaignMedalsRanking"
        }, 
        {
            "trigger": "Real CStation.LadderPoints", 
            "contents": "LadderPoints"
        }, 
        {
            "trigger": "Integer CStation.LadderRank", 
            "contents": "LadderRank"
        }, 
        {
            "trigger": "CMlStation", 
            "contents": "CMlStation"
        }, 
        {
            "trigger": "CStation CMlStation.Station", 
            "contents": "Station"
        }, 
        {
            "trigger": "Void CMlStation.EnterStation()", 
            "contents": "EnterStation()"
        }, 
        {
            "trigger": "CEditorPlugin", 
            "contents": "CEditorPlugin"
        }, 
        {
            "trigger": "CEditorPlugin::CardinalDirections::North", 
            "contents": "CEditorPlugin::CardinalDirections::North"
        }, 
        {
            "trigger": "CEditorPlugin::CardinalDirections::East", 
            "contents": "CEditorPlugin::CardinalDirections::East"
        }, 
        {
            "trigger": "CEditorPlugin::CardinalDirections::South", 
            "contents": "CEditorPlugin::CardinalDirections::South"
        }, 
        {
            "trigger": "CEditorPlugin::CardinalDirections::West", 
            "contents": "CEditorPlugin::CardinalDirections::West"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Unknown", 
            "contents": "CEditorPlugin::PlaceMode::Unknown"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Terraform", 
            "contents": "CEditorPlugin::PlaceMode::Terraform"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Block", 
            "contents": "CEditorPlugin::PlaceMode::Block"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Macroblock", 
            "contents": "CEditorPlugin::PlaceMode::Macroblock"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Skin", 
            "contents": "CEditorPlugin::PlaceMode::Skin"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::CopyPaste", 
            "contents": "CEditorPlugin::PlaceMode::CopyPaste"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Test", 
            "contents": "CEditorPlugin::PlaceMode::Test"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Plugin", 
            "contents": "CEditorPlugin::PlaceMode::Plugin"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::CustomSelection", 
            "contents": "CEditorPlugin::PlaceMode::CustomSelection"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::OffZone", 
            "contents": "CEditorPlugin::PlaceMode::OffZone"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::BlockProperty", 
            "contents": "CEditorPlugin::PlaceMode::BlockProperty"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::Path", 
            "contents": "CEditorPlugin::PlaceMode::Path"
        }, 
        {
            "trigger": "CEditorPlugin::PlaceMode::GhostBlock", 
            "contents": "CEditorPlugin::PlaceMode::GhostBlock"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::Unknown", 
            "contents": "CEditorPlugin::EditMode::Unknown"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::Place", 
            "contents": "CEditorPlugin::EditMode::Place"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::FreeLook", 
            "contents": "CEditorPlugin::EditMode::FreeLook"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::Erase", 
            "contents": "CEditorPlugin::EditMode::Erase"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::Pick", 
            "contents": "CEditorPlugin::EditMode::Pick"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::SelectionAdd", 
            "contents": "CEditorPlugin::EditMode::SelectionAdd"
        }, 
        {
            "trigger": "CEditorPlugin::EditMode::SelectionRemove", 
            "contents": "CEditorPlugin::EditMode::SelectionRemove"
        }, 
        {
            "trigger": "CMap CEditorPlugin.Map", 
            "contents": "Map"
        }, 
        {
            "trigger": "Void CEditorPlugin.ComputeShadows()", 
            "contents": "ComputeShadows()"
        }, 
        {
            "trigger": "Void CEditorPlugin.Undo()", 
            "contents": "Undo()"
        }, 
        {
            "trigger": "Void CEditorPlugin.Redo()", 
            "contents": "Redo()"
        }, 
        {
            "trigger": "Void CEditorPlugin.Quit()", 
            "contents": "Quit()"
        }, 
        {
            "trigger": "Void CEditorPlugin.Help()", 
            "contents": "Help()"
        }, 
        {
            "trigger": "Void CEditorPlugin.Validate()", 
            "contents": "Validate()"
        }, 
        {
            "trigger": "Void CEditorPlugin.AutoSave()", 
            "contents": "AutoSave()"
        }, 
        {
            "trigger": "Void CEditorPlugin.SaveMap(Text FileName, Text Path)", 
            "contents": "SaveMap(${1:Text FileName}, ${2:Text Path})"
        }, 
        {
            "trigger": "PlaceMode CEditorPlugin.PlaceMode", 
            "contents": "PlaceMode"
        }, 
        {
            "trigger": "EditMode CEditorPlugin.EditMode", 
            "contents": "EditMode"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.UndergroundMode", 
            "contents": "UndergroundMode"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.BlockStockMode", 
            "contents": "BlockStockMode"
        }, 
        {
            "trigger": "Int3 CEditorPlugin.CursorCoord", 
            "contents": "CursorCoord"
        }, 
        {
            "trigger": "CardinalDirections CEditorPlugin.CursorDir", 
            "contents": "CursorDir"
        }, 
        {
            "trigger": "CBlockModel CEditorPlugin.CursorBlockModel", 
            "contents": "CursorBlockModel"
        }, 
        {
            "trigger": "CBlockModel CEditorPlugin.CursorTerrainBlockModel", 
            "contents": "CursorTerrainBlockModel"
        }, 
        {
            "trigger": "CMacroblockModel CEditorPlugin.CursorMacroblockModel", 
            "contents": "CursorMacroblockModel"
        }, 
        {
            "trigger": "Real CEditorPlugin.CameraVAngle", 
            "contents": "CameraVAngle"
        }, 
        {
            "trigger": "Real CEditorPlugin.CameraHAngle", 
            "contents": "CameraHAngle"
        }, 
        {
            "trigger": "Real CEditorPlugin.CameraToTargetDistance", 
            "contents": "CameraToTargetDistance"
        }, 
        {
            "trigger": "Vec3 CEditorPlugin.TargetedPosition", 
            "contents": "TargetedPosition"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EnableAirMapping", 
            "contents": "EnableAirMapping"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EnableMixMapping", 
            "contents": "EnableMixMapping"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAllBlocks()", 
            "contents": "RemoveAllBlocks()"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAllTerrain()", 
            "contents": "RemoveAllTerrain()"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAllOffZone()", 
            "contents": "RemoveAllOffZone()"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAllObjects()", 
            "contents": "RemoveAllObjects()"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAll()", 
            "contents": "RemoveAll()"
        }, 
        {
            "trigger": "Void CEditorPlugin.RemoveAllBlocksAndTerrain()", 
            "contents": "RemoveAllBlocksAndTerrain()"
        }, 
        {
            "trigger": "Void CEditorPlugin.ShowCustomSelection()", 
            "contents": "ShowCustomSelection()"
        }, 
        {
            "trigger": "Void CEditorPlugin.HideCustomSelection()", 
            "contents": "HideCustomSelection()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_Copy()", 
            "contents": "CopyPaste_Copy()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_Cut()", 
            "contents": "CopyPaste_Cut()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_Remove()", 
            "contents": "CopyPaste_Remove()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_SelectAll()", 
            "contents": "CopyPaste_SelectAll()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_ResetSelection()", 
            "contents": "CopyPaste_ResetSelection()"
        }, 
        {
            "trigger": "Void CEditorPlugin.OpenToolsMenu()", 
            "contents": "OpenToolsMenu()"
        }, 
        {
            "trigger": "Void CEditorPlugin.EditMediatrackIngame()", 
            "contents": "EditMediatrackIngame()"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceBlock(CBlockModel BlockModel, Int3 Coord, CardinalDirections Dir, Boolean OnGround, Integer VariantIndex)", 
            "contents": "CanPlaceBlock(${1:CBlockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir}, ${4:Boolean OnGround}, ${5:Integer VariantIndex})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceBlock(CBlockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "PlaceBlock(${1:CBlockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceBlock_NoDestruction(CBlockModel BlockModel, Int3 Coord, CardinalDirections Dir, Boolean OnGround, Integer VariantIndex)", 
            "contents": "CanPlaceBlock_NoDestruction(${1:CBlockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir}, ${4:Boolean OnGround}, ${5:Integer VariantIndex})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceBlock_NoDestruction(CBlockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "PlaceBlock_NoDestruction(${1:CBlockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceRoadBlocks(CBlockModel BlockModel, Int3 StartCoord, Int3 EndCoord)", 
            "contents": "CanPlaceRoadBlocks(${1:CBlockModel BlockModel}, ${2:Int3 StartCoord}, ${3:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceRoadBlocks(CBlockModel BlockModel, Int3 StartCoord, Int3 EndCoord)", 
            "contents": "PlaceRoadBlocks(${1:CBlockModel BlockModel}, ${2:Int3 StartCoord}, ${3:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceTerrainBlocks(CBlockModel BlockModel, Int3 StartCoord, Int3 EndCoord)", 
            "contents": "CanPlaceTerrainBlocks(${1:CBlockModel BlockModel}, ${2:Int3 StartCoord}, ${3:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceTerrainBlocks(CBlockModel BlockModel, Int3 StartCoord, Int3 EndCoord)", 
            "contents": "PlaceTerrainBlocks(${1:CBlockModel BlockModel}, ${2:Int3 StartCoord}, ${3:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceTerrainBlocks_NoDestruction(CBlockModel BlockModel, Int3 StartCoord, Int3 EndCoord)", 
            "contents": "PlaceTerrainBlocks_NoDestruction(${1:CBlockModel BlockModel}, ${2:Int3 StartCoord}, ${3:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceMacroblock(CMacroblockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "CanPlaceMacroblock(${1:CMacroblockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceMacroblock(CMacroblockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "PlaceMacroblock(${1:CMacroblockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CanPlaceMacroblock_NoDestruction(CMacroblockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "CanPlaceMacroblock_NoDestruction(${1:CMacroblockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.PlaceMacroblock_NoDestruction(CMacroblockModel BlockModel, Int3 Coord, CardinalDirections Dir)", 
            "contents": "PlaceMacroblock_NoDestruction(${1:CMacroblockModel BlockModel}, ${2:Int3 Coord}, ${3:CardinalDirections Dir})"
        }, 
        {
            "trigger": "CBlock CEditorPlugin.GetBlock(Int3 Coord)", 
            "contents": "GetBlock(${1:Int3 Coord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.RemoveBlock(Int3 Coord)", 
            "contents": "RemoveBlock(${1:Int3 Coord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.RemoveTerrainBlocks(Int3 StartCoord, Int3 EndCoord)", 
            "contents": "RemoveTerrainBlocks(${1:Int3 StartCoord}, ${2:Int3 EndCoord})"
        }, 
        {
            "trigger": "Integer CEditorPlugin.GetBlockGroundHeight(CBlockModel BlockModel, Integer CoordX, Integer CoordZ, CardinalDirections Dir)", 
            "contents": "GetBlockGroundHeight(${1:CBlockModel BlockModel}, ${2:Integer CoordX}, ${3:Integer CoordZ}, ${4:CardinalDirections Dir})"
        }, 
        {
            "trigger": "CBlock CEditorPlugin.GetStartLineBlock()", 
            "contents": "GetStartLineBlock()"
        }, 
        {
            "trigger": "Void CEditorPlugin.CopyPaste_AddOrSubSelection(Int3 StartCoord, Int3 EndCoord)", 
            "contents": "CopyPaste_AddOrSubSelection(${1:Int3 StartCoord}, ${2:Int3 EndCoord})"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.CopyPaste_Symmetrize()", 
            "contents": "CopyPaste_Symmetrize()"
        }, 
        {
            "trigger": "Void CEditorPlugin.SaveMacroblock(CMacroblockModel MacroblockModel)", 
            "contents": "SaveMacroblock(${1:CMacroblockModel MacroblockModel})"
        }, 
        {
            "trigger": "Integer CEditorPlugin.GetInterfaceNumber(CCollector Collector)", 
            "contents": "GetInterfaceNumber(${1:CCollector Collector})"
        }, 
        {
            "trigger": "Void CEditorPlugin.SetInterfaceNumber(CCollector Collector, Integer NewValue)", 
            "contents": "SetInterfaceNumber(${1:CCollector Collector}, ${2:Integer NewValue})"
        }, 
        {
            "trigger": "CMacroblockModel CEditorPlugin.GetMacroblockModelFromName(Text MacroblockModelName)", 
            "contents": "GetMacroblockModelFromName(${1:Text MacroblockModelName})"
        }, 
        {
            "trigger": "CBlockModel CEditorPlugin.GetTerrainBlockModelFromName(Text TerrainBlockModelName)", 
            "contents": "GetTerrainBlockModelFromName(${1:Text TerrainBlockModelName})"
        }, 
        {
            "trigger": "CBlockModel CEditorPlugin.GetBlockModelFromName(Text BlockModelName)", 
            "contents": "GetBlockModelFromName(${1:Text BlockModelName})"
        }, 
        {
            "trigger": "Integer CEditorPlugin.MediatrackIngameEditedClipIndex", 
            "contents": "MediatrackIngameEditedClipIndex"
        }, 
        {
            "trigger": "Vec3 CEditorPlugin.CustomSelectionRGB", 
            "contents": "CustomSelectionRGB"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EnableEditorInputsCustomProcessing", 
            "contents": "EnableEditorInputsCustomProcessing"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_Menu", 
            "contents": "EditorInputIsDown_Menu"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_SwitchToRace", 
            "contents": "EditorInputIsDown_SwitchToRace"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorUp", 
            "contents": "EditorInputIsDown_CursorUp"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorRight", 
            "contents": "EditorInputIsDown_CursorRight"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorDown", 
            "contents": "EditorInputIsDown_CursorDown"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorLeft", 
            "contents": "EditorInputIsDown_CursorLeft"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorRaise", 
            "contents": "EditorInputIsDown_CursorRaise"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorLower", 
            "contents": "EditorInputIsDown_CursorLower"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorTurn", 
            "contents": "EditorInputIsDown_CursorTurn"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorPick", 
            "contents": "EditorInputIsDown_CursorPick"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorPlace", 
            "contents": "EditorInputIsDown_CursorPlace"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CursorDelete", 
            "contents": "EditorInputIsDown_CursorDelete"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CameraUp", 
            "contents": "EditorInputIsDown_CameraUp"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CameraRight", 
            "contents": "EditorInputIsDown_CameraRight"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CameraDown", 
            "contents": "EditorInputIsDown_CameraDown"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_CameraLeft", 
            "contents": "EditorInputIsDown_CameraLeft"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_IconUp", 
            "contents": "EditorInputIsDown_IconUp"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_IconRight", 
            "contents": "EditorInputIsDown_IconRight"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_IconDown", 
            "contents": "EditorInputIsDown_IconDown"
        }, 
        {
            "trigger": "Boolean CEditorPlugin.EditorInputIsDown_IconLeft", 
            "contents": "EditorInputIsDown_IconLeft"
        }, 
        {
            "trigger": "Real CEditorPlugin.CollectionSquareSize", 
            "contents": "CollectionSquareSize"
        }, 
        {
            "trigger": "Real CEditorPlugin.CollectionSquareHeight", 
            "contents": "CollectionSquareHeight"
        }, 
        {
            "trigger": "Integer CEditorPlugin.CollectionGroundY", 
            "contents": "CollectionGroundY"
        }, 
        {
            "trigger": "Text CEditorPlugin.ManialinkText", 
            "contents": "ManialinkText"
        }, 
        {
            "trigger": "CMlPage CEditorPlugin.ManialinkPage", 
            "contents": "ManialinkPage"
        }, 
        {
            "trigger": "CSmMode", 
            "contents": "CSmMode"
        }, 
        {
            "trigger": "CSmMode::EWeapon::Laser", 
            "contents": "CSmMode::EWeapon::Laser"
        }, 
        {
            "trigger": "CSmMode::EWeapon::Rocket", 
            "contents": "CSmMode::EWeapon::Rocket"
        }, 
        {
            "trigger": "CSmMode::EWeapon::Nucleus", 
            "contents": "CSmMode::EWeapon::Nucleus"
        }, 
        {
            "trigger": "CSmMode::EWeapon::Arrow", 
            "contents": "CSmMode::EWeapon::Arrow"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_A", 
            "contents": "CSmMode::EActionSlot::Slot_A"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_B", 
            "contents": "CSmMode::EActionSlot::Slot_B"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_C", 
            "contents": "CSmMode::EActionSlot::Slot_C"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_D", 
            "contents": "CSmMode::EActionSlot::Slot_D"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_E", 
            "contents": "CSmMode::EActionSlot::Slot_E"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_F", 
            "contents": "CSmMode::EActionSlot::Slot_F"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_G", 
            "contents": "CSmMode::EActionSlot::Slot_G"
        }, 
        {
            "trigger": "CSmMode::EActionSlot::Slot_H", 
            "contents": "CSmMode::EActionSlot::Slot_H"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Weapon", 
            "contents": "CSmMode::EActionInput::Weapon"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Movement", 
            "contents": "CSmMode::EActionInput::Movement"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Activable1", 
            "contents": "CSmMode::EActionInput::Activable1"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Activable2", 
            "contents": "CSmMode::EActionInput::Activable2"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Activable3", 
            "contents": "CSmMode::EActionInput::Activable3"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Activable4", 
            "contents": "CSmMode::EActionInput::Activable4"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Consumable1", 
            "contents": "CSmMode::EActionInput::Consumable1"
        }, 
        {
            "trigger": "CSmMode::EActionInput::Consumable2", 
            "contents": "CSmMode::EActionInput::Consumable2"
        }, 
        {
            "trigger": "CSmMode::EActionInput::None", 
            "contents": "CSmMode::EActionInput::None"
        }, 
        {
            "trigger": "CSmMode::EGameplay::Default", 
            "contents": "CSmMode::EGameplay::Default"
        }, 
        {
            "trigger": "CSmMode::EGameplay::Mp3Beta0", 
            "contents": "CSmMode::EGameplay::Mp3Beta0"
        }, 
        {
            "trigger": "Integer CSmMode.StartTime", 
            "contents": "StartTime"
        }, 
        {
            "trigger": "Integer CSmMode.EndTime", 
            "contents": "EndTime"
        }, 
        {
            "trigger": "Integer CSmMode.SpawnInvulnerabilityDuration", 
            "contents": "SpawnInvulnerabilityDuration"
        }, 
        {
            "trigger": "Boolean CSmMode.UseClans", 
            "contents": "UseClans"
        }, 
        {
            "trigger": "Boolean CSmMode.UseForcedClans", 
            "contents": "UseForcedClans"
        }, 
        {
            "trigger": "Boolean CSmMode.UsePvPCollisions", 
            "contents": "UsePvPCollisions"
        }, 
        {
            "trigger": "Boolean CSmMode.UsePvPWeapons", 
            "contents": "UsePvPWeapons"
        }, 
        {
            "trigger": "Boolean CSmMode.UseInterractiveScreensIn3d", 
            "contents": "UseInterractiveScreensIn3d"
        }, 
        {
            "trigger": "Boolean CSmMode.UseLaserVsBullets", 
            "contents": "UseLaserVsBullets"
        }, 
        {
            "trigger": "Boolean CSmMode.UseLaserSkewering", 
            "contents": "UseLaserSkewering"
        }, 
        {
            "trigger": "Boolean CSmMode.UsePlayerTagging", 
            "contents": "UsePlayerTagging"
        }, 
        {
            "trigger": "Boolean CSmMode.UseBeaconsWithRecipients", 
            "contents": "UseBeaconsWithRecipients"
        }, 
        {
            "trigger": "Boolean CSmMode.UseAmmoBonusOnHit", 
            "contents": "UseAmmoBonusOnHit"
        }, 
        {
            "trigger": "Boolean CSmMode.UseSameWallJump", 
            "contents": "UseSameWallJump"
        }, 
        {
            "trigger": "Boolean CSmMode.UseDefaultActionEvents", 
            "contents": "UseDefaultActionEvents"
        }, 
        {
            "trigger": "Boolean CSmMode.UseAllies", 
            "contents": "UseAllies"
        }, 
        {
            "trigger": "Boolean CSmMode.UseAutoSpawnBots", 
            "contents": "UseAutoSpawnBots"
        }, 
        {
            "trigger": "Boolean CSmMode.ForceNavMapsComputation", 
            "contents": "ForceNavMapsComputation"
        }, 
        {
            "trigger": "Integer CSmMode.GameplayVersion", 
            "contents": "GameplayVersion"
        }, 
        {
            "trigger": "EGameplay CSmMode.Gameplay", 
            "contents": "Gameplay"
        }, 
        {
            "trigger": "Boolean CSmMode.UseProtectClanmates", 
            "contents": "UseProtectClanmates"
        }, 
        {
            "trigger": "Real CSmMode.OffZoneRadius", 
            "contents": "OffZoneRadius"
        }, 
        {
            "trigger": "Real CSmMode.OffZoneRadiusSpeed", 
            "contents": "OffZoneRadiusSpeed"
        }, 
        {
            "trigger": "Ident CSmMode.OffZoneCenterLandmarkId", 
            "contents": "OffZoneCenterLandmarkId"
        }, 
        {
            "trigger": "Integer CSmMode.PlayersNbTotal", 
            "contents": "PlayersNbTotal"
        }, 
        {
            "trigger": "Integer CSmMode.PlayersNbAlive", 
            "contents": "PlayersNbAlive"
        }, 
        {
            "trigger": "Integer CSmMode.PlayersNbDead", 
            "contents": "PlayersNbDead"
        }, 
        {
            "trigger": "Integer CSmMode.ClansNbTotal", 
            "contents": "ClansNbTotal"
        }, 
        {
            "trigger": "Integer CSmMode.ClansNbAlive", 
            "contents": "ClansNbAlive"
        }, 
        {
            "trigger": "Integer CSmMode.ClansNbDead", 
            "contents": "ClansNbDead"
        }, 
        {
            "trigger": "Void CSmMode.PassOn(CSmModeEvent Event)", 
            "contents": "PassOn(${1:CSmModeEvent Event})"
        }, 
        {
            "trigger": "Void CSmMode.Discard(CSmModeEvent Event)", 
            "contents": "Discard(${1:CSmModeEvent Event})"
        }, 
        {
            "trigger": "Void CSmMode.SpawnPlayer(CSmPlayer Player, Integer ClanNum, Integer Armor, CSmMapPlayerSpawn PlayerSpawn, Integer ActivationDate)", 
            "contents": "SpawnPlayer(${1:CSmPlayer Player}, ${2:Integer ClanNum}, ${3:Integer Armor}, ${4:CSmMapPlayerSpawn PlayerSpawn}, ${5:Integer ActivationDate})"
        }, 
        {
            "trigger": "Void CSmMode.SpawnBotPlayer(CSmPlayer Player, Integer ClanNum, Integer Armor, CSmMapPlayerSpawn PlayerSpawn, Integer ActivationDate)", 
            "contents": "SpawnBotPlayer(${1:CSmPlayer Player}, ${2:Integer ClanNum}, ${3:Integer Armor}, ${4:CSmMapPlayerSpawn PlayerSpawn}, ${5:Integer ActivationDate})"
        }, 
        {
            "trigger": "Void CSmMode.SpawnBotPlayer(CSmPlayer Player, Integer ClanNum, Integer Armor, CSmMapBotPath BotPath, Integer ActivationDate)", 
            "contents": "SpawnBotPlayer(${1:CSmPlayer Player}, ${2:Integer ClanNum}, ${3:Integer Armor}, ${4:CSmMapBotPath BotPath}, ${5:Integer ActivationDate})"
        }, 
        {
            "trigger": "Void CSmMode.UnspawnPlayer(CSmPlayer Player)", 
            "contents": "UnspawnPlayer(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmMode.ClearScores()", 
            "contents": "ClearScores()"
        }, 
        {
            "trigger": "Void CSmMode.SetPlayerClan(CSmPlayer Player, Integer ClanNum)", 
            "contents": "SetPlayerClan(${1:CSmPlayer Player}, ${2:Integer ClanNum})"
        }, 
        {
            "trigger": "Void CSmMode.SetPlayerWeapon(CSmPlayer Player, EWeapon DefaultWeapon, Boolean AutoSwitchWeapon)", 
            "contents": "SetPlayerWeapon(${1:CSmPlayer Player}, ${2:EWeapon DefaultWeapon}, ${3:Boolean AutoSwitchWeapon})"
        }, 
        {
            "trigger": "Void CSmMode.SetPlayerReloadAllWeapons(CSmPlayer Player, Boolean ReloadAllWeapons)", 
            "contents": "SetPlayerReloadAllWeapons(${1:CSmPlayer Player}, ${2:Boolean ReloadAllWeapons})"
        }, 
        {
            "trigger": "Void CSmMode.SetPlayerAmmo(CSmPlayer Player, EWeapon Weapon, Integer Count)", 
            "contents": "SetPlayerAmmo(${1:CSmPlayer Player}, ${2:EWeapon Weapon}, ${3:Integer Count})"
        }, 
        {
            "trigger": "Integer CSmMode.GetPlayerAmmo(CSmPlayer Player, EWeapon Weapon)", 
            "contents": "GetPlayerAmmo(${1:CSmPlayer Player}, ${2:EWeapon Weapon})"
        }, 
        {
            "trigger": "Void CSmMode.AddPlayerAmmo(CSmPlayer Player, EWeapon Weapon, Real DeltaCount)", 
            "contents": "AddPlayerAmmo(${1:CSmPlayer Player}, ${2:EWeapon Weapon}, ${3:Real DeltaCount})"
        }, 
        {
            "trigger": "Void CSmMode.SetPlayerAmmoMax(CSmPlayer Player, EWeapon Weapon, Integer Count)", 
            "contents": "SetPlayerAmmoMax(${1:CSmPlayer Player}, ${2:EWeapon Weapon}, ${3:Integer Count})"
        }, 
        {
            "trigger": "Integer CSmMode.GetPlayerAmmoMax(CSmPlayer Player, EWeapon Weapon)", 
            "contents": "GetPlayerAmmoMax(${1:CSmPlayer Player}, ${2:EWeapon Weapon})"
        }, 
        {
            "trigger": "Void CSmMode.AddPlayerArmor(CSmPlayer Victim, Integer DeltaArmor, CSmPlayer Shooter, Integer ShooterPoints)", 
            "contents": "AddPlayerArmor(${1:CSmPlayer Victim}, ${2:Integer DeltaArmor}, ${3:CSmPlayer Shooter}, ${4:Integer ShooterPoints})"
        }, 
        {
            "trigger": "Void CSmMode.RemovePlayerArmor(CSmPlayer Victim, Integer DeltaArmor, CSmPlayer Shooter, Integer ShooterPoints)", 
            "contents": "RemovePlayerArmor(${1:CSmPlayer Victim}, ${2:Integer DeltaArmor}, ${3:CSmPlayer Shooter}, ${4:Integer ShooterPoints})"
        }, 
        {
            "trigger": "Integer CSmMode.GetWeaponNum(EWeapon Weapon)", 
            "contents": "GetWeaponNum(${1:EWeapon Weapon})"
        }, 
        {
            "trigger": "Boolean CSmMode.CanRespawnPlayer(CSmPlayer Player)", 
            "contents": "CanRespawnPlayer(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmMode.RespawnPlayer(CSmPlayer Player)", 
            "contents": "RespawnPlayer(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmMode.RespawnPlayer(CSmPlayer Player, CSmMapLandmark CheckpointLandmark)", 
            "contents": "RespawnPlayer(${1:CSmPlayer Player}, ${2:CSmMapLandmark CheckpointLandmark})"
        }, 
        {
            "trigger": "CSmPlayer CSmMode.CreateBotPlayer(Ident ModelId, Integer TeamNum)", 
            "contents": "CreateBotPlayer(${1:Ident ModelId}, ${2:Integer TeamNum})"
        }, 
        {
            "trigger": "Void CSmMode.DestroyBotPlayer(CSmPlayer BotPlayer)", 
            "contents": "DestroyBotPlayer(${1:CSmPlayer BotPlayer})"
        }, 
        {
            "trigger": "Void CSmMode.DestroyAllBotPlayers()", 
            "contents": "DestroyAllBotPlayers()"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_Move(CSmPlayer BotPlayer, Vec3 Goal)", 
            "contents": "ScriptedBot_Move(${1:CSmPlayer BotPlayer}, ${2:Vec3 Goal})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_MoveDelta(CSmPlayer BotPlayer, Vec3 Delta)", 
            "contents": "ScriptedBot_MoveDelta(${1:CSmPlayer BotPlayer}, ${2:Vec3 Delta})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_MoveAndAim(CSmPlayer BotPlayer, Vec3 Goal)", 
            "contents": "ScriptedBot_MoveAndAim(${1:CSmPlayer BotPlayer}, ${2:Vec3 Goal})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_MoveDeltaAndAim(CSmPlayer BotPlayer, Vec3 Delta)", 
            "contents": "ScriptedBot_MoveDeltaAndAim(${1:CSmPlayer BotPlayer}, ${2:Vec3 Delta})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_Aim(CSmPlayer BotPlayer, Vec3 Goal)", 
            "contents": "ScriptedBot_Aim(${1:CSmPlayer BotPlayer}, ${2:Vec3 Goal})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_AimDelta(CSmPlayer BotPlayer, Real DeltaYaw, Real DeltaPitch)", 
            "contents": "ScriptedBot_AimDelta(${1:CSmPlayer BotPlayer}, ${2:Real DeltaYaw}, ${3:Real DeltaPitch})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_RequestAction(CSmPlayer BotPlayer)", 
            "contents": "ScriptedBot_RequestAction(${1:CSmPlayer BotPlayer})"
        }, 
        {
            "trigger": "Void CSmMode.ScriptedBot_RequestGunTrigger(CSmPlayer BotPlayer)", 
            "contents": "ScriptedBot_RequestGunTrigger(${1:CSmPlayer BotPlayer})"
        }, 
        {
            "trigger": "Void CSmMode.ActionLoad(CSmPlayer Player, EActionSlot ActionSlot, Ident ModelId)", 
            "contents": "ActionLoad(${1:CSmPlayer Player}, ${2:EActionSlot ActionSlot}, ${3:Ident ModelId})"
        }, 
        {
            "trigger": "Void CSmMode.ActionBind(CSmPlayer Player, EActionSlot ActionSlot, EActionInput ActionInput)", 
            "contents": "ActionBind(${1:CSmPlayer Player}, ${2:EActionSlot ActionSlot}, ${3:EActionInput ActionInput})"
        }, 
        {
            "trigger": "Void CSmMode.ActionSetVariant(CSmPlayer Player, EActionSlot ActionSlot, Integer ActionVariant)", 
            "contents": "ActionSetVariant(${1:CSmPlayer Player}, ${2:EActionSlot ActionSlot}, ${3:Integer ActionVariant})"
        }, 
        {
            "trigger": "Void CSmMode.SetNbFakePlayers(Integer NbClan1, Integer NbClan2)", 
            "contents": "SetNbFakePlayers(${1:Integer NbClan1}, ${2:Integer NbClan2})"
        }, 
        {
            "trigger": "CSmObject CSmMode.ObjectCreate(Ident ModelId)", 
            "contents": "ObjectCreate(${1:Ident ModelId})"
        }, 
        {
            "trigger": "Void CSmMode.ObjectDestroy(CSmObject Object)", 
            "contents": "ObjectDestroy(${1:CSmObject Object})"
        }, 
        {
            "trigger": "Void CSmMode.ObjectDestroyAll()", 
            "contents": "ObjectDestroyAll()"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SaveAttackScore(CSmPlayer Player, Integer Score)", 
            "contents": "Replay_SaveAttackScore(${1:CSmPlayer Player}, ${2:Integer Score})"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SaveDefenseScore(CSmPlayer Player, Integer Score)", 
            "contents": "Replay_SaveDefenseScore(${1:CSmPlayer Player}, ${2:Integer Score})"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SaveTeamScore(Integer Team, Integer Score)", 
            "contents": "Replay_SaveTeamScore(${1:Integer Team}, ${2:Integer Score})"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SavePlayerOfInterest(CSmPlayer Player)", 
            "contents": "Replay_SavePlayerOfInterest(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SaveWinner(CSmPlayer Player)", 
            "contents": "Replay_SaveWinner(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmMode.Replay_SaveInterface()", 
            "contents": "Replay_SaveInterface()"
        }, 
        {
            "trigger": "CSmMlScriptIngame", 
            "contents": "CSmMlScriptIngame"
        }, 
        {
            "trigger": "Integer CSmMlScriptIngame.ArenaNow", 
            "contents": "ArenaNow"
        }, 
        {
            "trigger": "CSmPlayer CSmMlScriptIngame.InputPlayer", 
            "contents": "InputPlayer"
        }, 
        {
            "trigger": "CSmPlayer CSmMlScriptIngame.GUIPlayer", 
            "contents": "GUIPlayer"
        }, 
        {
            "trigger": "Boolean CSmMlScriptIngame.HideResumePlayingButton", 
            "contents": "HideResumePlayingButton"
        }, 
        {
            "trigger": "CSmAction", 
            "contents": "CSmAction"
        }, 
        {
            "trigger": "Integer CSmAction.Now", 
            "contents": "Now"
        }, 
        {
            "trigger": "Integer CSmAction.Variant", 
            "contents": "Variant"
        }, 
        {
            "trigger": "CSmPlayer CSmAction.Owner", 
            "contents": "Owner"
        }, 
        {
            "trigger": "Boolean CSmAction.IsActive", 
            "contents": "IsActive"
        }, 
        {
            "trigger": "Integer CSmAction.Energy", 
            "contents": "Energy"
        }, 
        {
            "trigger": "Integer CSmAction.EnergyMax", 
            "contents": "EnergyMax"
        }, 
        {
            "trigger": "Integer CSmAction.EnergyCost", 
            "contents": "EnergyCost"
        }, 
        {
            "trigger": "Boolean CSmAction.EnergyReload", 
            "contents": "EnergyReload"
        }, 
        {
            "trigger": "Void CSmAction.SendRulesEvent(Text Param1, Text[] Param2, CSmPlayer Shooter, CSmPlayer Victim)", 
            "contents": "SendRulesEvent(${1:Text Param1}, ${2:Text[] Param2}, ${3:CSmPlayer Shooter}, ${4:CSmPlayer Victim})"
        }, 
        {
            "trigger": "Ident CSmAction.GetAnimModelId(Text ModelName)", 
            "contents": "GetAnimModelId(${1:Text ModelName})"
        }, 
        {
            "trigger": "Void CSmAction.PlayAnimOnPlayer(Ident AnimModelId, CSmPlayer Player)", 
            "contents": "PlayAnimOnPlayer(${1:Ident AnimModelId}, ${2:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmAction.PlayAnimAtPosition(Ident AnimModelId, Vec3 Position, Vec3 Direction)", 
            "contents": "PlayAnimAtPosition(${1:Ident AnimModelId}, ${2:Vec3 Position}, ${3:Vec3 Direction})"
        }, 
        {
            "trigger": "Ident CSmAction.GetProjectileModelId(Text ModelName)", 
            "contents": "GetProjectileModelId(${1:Text ModelName})"
        }, 
        {
            "trigger": "Vec3 CSmAction.InitialDirection,Vec3", 
            "contents": "InitialDirection,Vec3"
        }, 
        {
            "trigger": "Void CSmAction.CreateProjectile(CSmPlayer PlayerToIgnore, Ident ProjectileModelId, Vec3 InitialPosition, Vec3 InitialDirection, Vec3Integer ContextId)", 
            "contents": "CreateProjectile(${1:CSmPlayer PlayerToIgnore}, ${2:Ident ProjectileModelId}, ${3:Vec3 InitialPosition}, ${4:Vec3 InitialDirection}, ${5:Vec3Integer ContextId})"
        }, 
        {
            "trigger": "Void CSmAction.CreateShoot(CSmPlayer Shooter, Ident ProjectileModelId)", 
            "contents": "CreateShoot(${1:CSmPlayer Shooter}, ${2:Ident ProjectileModelId})"
        }, 
        {
            "trigger": "Void CSmAction.CreateShoot(CSmPlayer Shooter, Ident ProjectileModelId, Integer ContextId)", 
            "contents": "CreateShoot(${1:CSmPlayer Shooter}, ${2:Ident ProjectileModelId}, ${3:Integer ContextId})"
        }, 
        {
            "trigger": "Integer CSmAction.Cooldown", 
            "contents": "Cooldown"
        }, 
        {
            "trigger": "Boolean CSmAction.Cooldown_IsReady(Integer Now)", 
            "contents": "Cooldown_IsReady(${1:Integer Now})"
        }, 
        {
            "trigger": "Void CSmAction.Cooldown_Start()", 
            "contents": "Cooldown_Start()"
        }, 
        {
            "trigger": "CSmMapType", 
            "contents": "CSmMapType"
        }, 
        {
            "trigger": "CSmMode CSmMapType.Mode", 
            "contents": "Mode"
        }, 
        {
            "trigger": "CTmMlScriptIngame", 
            "contents": "CTmMlScriptIngame"
        }, 
        {
            "trigger": "CTmMlPlayer CTmMlScriptIngame.InputPlayer", 
            "contents": "InputPlayer"
        }, 
        {
            "trigger": "CTmMlPlayer CTmMlScriptIngame.GUIPlayer", 
            "contents": "GUIPlayer"
        }, 
        {
            "trigger": "Vec3 CTmMlScriptIngame.MapStartLinePos", 
            "contents": "MapStartLinePos"
        }, 
        {
            "trigger": "Boolean CTmMlScriptIngame.MapIsLapRace", 
            "contents": "MapIsLapRace"
        }, 
        {
            "trigger": "Integer CTmMlScriptIngame.MapNbLaps", 
            "contents": "MapNbLaps"
        }, 
        {
            "trigger": "CTmMode", 
            "contents": "CTmMode"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::TotalPoints", 
            "contents": "CTmMode::ETmScoreSortOrder::TotalPoints"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::BestRace_Time", 
            "contents": "CTmMode::ETmScoreSortOrder::BestRace_Time"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::BestRace_Stunts", 
            "contents": "CTmMode::ETmScoreSortOrder::BestRace_Stunts"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::BestRace_NbRespawns", 
            "contents": "CTmMode::ETmScoreSortOrder::BestRace_NbRespawns"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::BestRace_CheckpointsProgress", 
            "contents": "CTmMode::ETmScoreSortOrder::BestRace_CheckpointsProgress"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::PrevRace_Time", 
            "contents": "CTmMode::ETmScoreSortOrder::PrevRace_Time"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::Name", 
            "contents": "CTmMode::ETmScoreSortOrder::Name"
        }, 
        {
            "trigger": "CTmMode::ETmScoreSortOrder::LadderRankSortValue", 
            "contents": "CTmMode::ETmScoreSortOrder::LadderRankSortValue"
        }, 
        {
            "trigger": "CTmMode::ETMRespawnBehaviour::Normal", 
            "contents": "CTmMode::ETMRespawnBehaviour::Normal"
        }, 
        {
            "trigger": "CTmMode::ETMRespawnBehaviour::DoNothing", 
            "contents": "CTmMode::ETMRespawnBehaviour::DoNothing"
        }, 
        {
            "trigger": "CTmMode::ETMRespawnBehaviour::GiveUpBeforeFirstCheckPoint", 
            "contents": "CTmMode::ETMRespawnBehaviour::GiveUpBeforeFirstCheckPoint"
        }, 
        {
            "trigger": "CTmMode::ETMRespawnBehaviour::AlwaysGiveUp", 
            "contents": "CTmMode::ETMRespawnBehaviour::AlwaysGiveUp"
        }, 
        {
            "trigger": "CTmMode::ETmRaceChronoBehaviour::Auto", 
            "contents": "CTmMode::ETmRaceChronoBehaviour::Auto"
        }, 
        {
            "trigger": "CTmMode::ETmRaceChronoBehaviour::Hidden", 
            "contents": "CTmMode::ETmRaceChronoBehaviour::Hidden"
        }, 
        {
            "trigger": "CTmMode::ETmRaceChronoBehaviour::CountDown", 
            "contents": "CTmMode::ETmRaceChronoBehaviour::CountDown"
        }, 
        {
            "trigger": "CTmMode::ETmRaceChronoBehaviour::Normal", 
            "contents": "CTmMode::ETmRaceChronoBehaviour::Normal"
        }, 
        {
            "trigger": "CTmMode::EPersonalGhost::Disabled", 
            "contents": "CTmMode::EPersonalGhost::Disabled"
        }, 
        {
            "trigger": "CTmMode::EPersonalGhost::Latest", 
            "contents": "CTmMode::EPersonalGhost::Latest"
        }, 
        {
            "trigger": "CTmMode::EPersonalGhost::FastestRace", 
            "contents": "CTmMode::EPersonalGhost::FastestRace"
        }, 
        {
            "trigger": "Integer CTmMode.Clan1Score", 
            "contents": "Clan1Score"
        }, 
        {
            "trigger": "Integer CTmMode.Clan2Score", 
            "contents": "Clan2Score"
        }, 
        {
            "trigger": "Integer CTmMode.ClansNbTotal", 
            "contents": "ClansNbTotal"
        }, 
        {
            "trigger": "Void CTmMode.PassOn(CTmModeEvent Event)", 
            "contents": "PassOn(${1:CTmModeEvent Event})"
        }, 
        {
            "trigger": "Void CTmMode.Discard(CTmModeEvent Event)", 
            "contents": "Discard(${1:CTmModeEvent Event})"
        }, 
        {
            "trigger": "Void CTmMode.SpawnPlayer(CTmPlayer Player, Integer ClanNum, Integer RaceStartTime)", 
            "contents": "SpawnPlayer(${1:CTmPlayer Player}, ${2:Integer ClanNum}, ${3:Integer RaceStartTime})"
        }, 
        {
            "trigger": "Void CTmMode.UnspawnPlayer(CTmPlayer Player)", 
            "contents": "UnspawnPlayer(${1:CTmPlayer Player})"
        }, 
        {
            "trigger": "Void CTmMode.SetPlayerClan(CTmPlayer Player, Integer ClanNum)", 
            "contents": "SetPlayerClan(${1:CTmPlayer Player}, ${2:Integer ClanNum})"
        }, 
        {
            "trigger": "Void CTmMode.Scores_Sort(ETmScoreSortOrder SortOrder)", 
            "contents": "Scores_Sort(${1:ETmScoreSortOrder SortOrder})"
        }, 
        {
            "trigger": "Void CTmMode.Scores_Clear()", 
            "contents": "Scores_Clear()"
        }, 
        {
            "trigger": "Void CTmMode.Ladder_ComputeRank(ETmScoreSortOrder SortOrder)", 
            "contents": "Ladder_ComputeRank(${1:ETmScoreSortOrder SortOrder})"
        }, 
        {
            "trigger": "Integer CTmMode.CutOffTimeLimit", 
            "contents": "CutOffTimeLimit"
        }, 
        {
            "trigger": "Integer CTmMode.NbLaps", 
            "contents": "NbLaps"
        }, 
        {
            "trigger": "Boolean CTmMode.IndependantLaps", 
            "contents": "IndependantLaps"
        }, 
        {
            "trigger": "Boolean CTmMode.UseClans", 
            "contents": "UseClans"
        }, 
        {
            "trigger": "Boolean CTmMode.UseForcedClans", 
            "contents": "UseForcedClans"
        }, 
        {
            "trigger": "ETMRespawnBehaviour CTmMode.RespawnBehaviour", 
            "contents": "RespawnBehaviour"
        }, 
        {
            "trigger": "Boolean CTmMode.UiRounds", 
            "contents": "UiRounds"
        }, 
        {
            "trigger": "Boolean CTmMode.UiLaps", 
            "contents": "UiLaps"
        }, 
        {
            "trigger": "Boolean CTmMode.UiStuntsMode", 
            "contents": "UiStuntsMode"
        }, 
        {
            "trigger": "Boolean CTmMode.UiDisplayStuntsNames", 
            "contents": "UiDisplayStuntsNames"
        }, 
        {
            "trigger": "Boolean CTmMode.UiDisableHelpMessage", 
            "contents": "UiDisableHelpMessage"
        }, 
        {
            "trigger": "Integer CTmMode.UiScoresPointsLimit", 
            "contents": "UiScoresPointsLimit"
        }, 
        {
            "trigger": "ETmRaceChronoBehaviour CTmMode.UiRaceChrono", 
            "contents": "UiRaceChrono"
        }, 
        {
            "trigger": "Boolean CTmMode.HideOpponents", 
            "contents": "HideOpponents"
        }, 
        {
            "trigger": "Integer CTmMode.ForceMaxOpponents", 
            "contents": "ForceMaxOpponents"
        }, 
        {
            "trigger": "Boolean CTmMode.EnableLegacyXmlRpcCallbacks", 
            "contents": "EnableLegacyXmlRpcCallbacks"
        }, 
        {
            "trigger": "Boolean CTmMode.MedalGhost_ShowGold", 
            "contents": "MedalGhost_ShowGold"
        }, 
        {
            "trigger": "Boolean CTmMode.MedalGhost_ShowSilver", 
            "contents": "MedalGhost_ShowSilver"
        }, 
        {
            "trigger": "Boolean CTmMode.MedalGhost_ShowBronze", 
            "contents": "MedalGhost_ShowBronze"
        }, 
        {
            "trigger": "EPersonalGhost CTmMode.PersonalGhost", 
            "contents": "PersonalGhost"
        }, 
        {
            "trigger": "Vec3 CTmMode.MapStartLinePos", 
            "contents": "MapStartLinePos"
        }, 
        {
            "trigger": "Boolean CTmMode.MapIsLapRace", 
            "contents": "MapIsLapRace"
        }, 
        {
            "trigger": "Integer CTmMode.MapNbLaps", 
            "contents": "MapNbLaps"
        }, 
        {
            "trigger": "CTmMapType", 
            "contents": "CTmMapType"
        }, 
        {
            "trigger": "CTmMode CTmMapType.Mode", 
            "contents": "Mode"
        }, 
        {
            "trigger": "CNod", 
            "contents": "CNod"
        }, 
        {
            "trigger": "Ident CNod.Id", 
            "contents": "Id"
        }, 
        {
            "trigger": "CMlPage", 
            "contents": "CMlPage"
        }, 
        {
            "trigger": "CMlFrame CMlPage.MainFrame", 
            "contents": "MainFrame"
        }, 
        {
            "trigger": "CMlControl CMlPage.GetFirstChild(Text ControlId)", 
            "contents": "GetFirstChild(${1:Text ControlId})"
        }, 
        {
            "trigger": "Boolean CMlPage.LinksInhibited", 
            "contents": "LinksInhibited"
        }, 
        {
            "trigger": "Void CMlPage.GetClassChildren(Text Class, CMlFrame Frame, Boolean Recursive)", 
            "contents": "GetClassChildren(${1:Text Class}, ${2:CMlFrame Frame}, ${3:Boolean Recursive})"
        }, 
        {
            "trigger": "CUser", 
            "contents": "CUser"
        }, 
        {
            "trigger": "CUser::EEchelon::None", 
            "contents": "CUser::EEchelon::None"
        }, 
        {
            "trigger": "CUser::EEchelon::Bronze1", 
            "contents": "CUser::EEchelon::Bronze1"
        }, 
        {
            "trigger": "CUser::EEchelon::Bronze2", 
            "contents": "CUser::EEchelon::Bronze2"
        }, 
        {
            "trigger": "CUser::EEchelon::Bronze3", 
            "contents": "CUser::EEchelon::Bronze3"
        }, 
        {
            "trigger": "CUser::EEchelon::Silver1", 
            "contents": "CUser::EEchelon::Silver1"
        }, 
        {
            "trigger": "CUser::EEchelon::Silver2", 
            "contents": "CUser::EEchelon::Silver2"
        }, 
        {
            "trigger": "CUser::EEchelon::Silver3", 
            "contents": "CUser::EEchelon::Silver3"
        }, 
        {
            "trigger": "CUser::EEchelon::Gold1", 
            "contents": "CUser::EEchelon::Gold1"
        }, 
        {
            "trigger": "CUser::EEchelon::Gold2", 
            "contents": "CUser::EEchelon::Gold2"
        }, 
        {
            "trigger": "CUser::EEchelon::Gold3", 
            "contents": "CUser::EEchelon::Gold3"
        }, 
        {
            "trigger": "CUser::ETagType::Bronze", 
            "contents": "CUser::ETagType::Bronze"
        }, 
        {
            "trigger": "CUser::ETagType::Silver", 
            "contents": "CUser::ETagType::Silver"
        }, 
        {
            "trigger": "CUser::ETagType::Gold", 
            "contents": "CUser::ETagType::Gold"
        }, 
        {
            "trigger": "CUser::ETagType::Nadeo", 
            "contents": "CUser::ETagType::Nadeo"
        }, 
        {
            "trigger": "CUser::EStereoDisplayMode::None", 
            "contents": "CUser::EStereoDisplayMode::None"
        }, 
        {
            "trigger": "CUser::EStereoDisplayMode::Stereo", 
            "contents": "CUser::EStereoDisplayMode::Stereo"
        }, 
        {
            "trigger": "CUser::EStereoDisplayMode::HMD", 
            "contents": "CUser::EStereoDisplayMode::HMD"
        }, 
        {
            "trigger": "Text CUser.Login", 
            "contents": "Login"
        }, 
        {
            "trigger": "Text CUser.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CUser.AvatarUrl", 
            "contents": "AvatarUrl"
        }, 
        {
            "trigger": "Text CUser.ZonePath", 
            "contents": "ZonePath"
        }, 
        {
            "trigger": "Text CUser.ZoneFlagUrl", 
            "contents": "ZoneFlagUrl"
        }, 
        {
            "trigger": "Text CUser.CountryFlagUrl", 
            "contents": "CountryFlagUrl"
        }, 
        {
            "trigger": "Text CUser.Language", 
            "contents": "Language"
        }, 
        {
            "trigger": "Text CUser.Description", 
            "contents": "Description"
        }, 
        {
            "trigger": "Vec3 CUser.Color", 
            "contents": "Color"
        }, 
        {
            "trigger": "Text CUser.ClubLink", 
            "contents": "ClubLink"
        }, 
        {
            "trigger": "Text CUser.BroadcastTVLogin", 
            "contents": "BroadcastTVLogin"
        }, 
        {
            "trigger": "Text CUser.SteamUserId", 
            "contents": "SteamUserId"
        }, 
        {
            "trigger": "Integer CUser.FameStars", 
            "contents": "FameStars"
        }, 
        {
            "trigger": "EEchelon CUser.Echelon", 
            "contents": "Echelon"
        }, 
        {
            "trigger": "Boolean CUser.IsBeginner", 
            "contents": "IsBeginner"
        }, 
        {
            "trigger": "Integer CUser.LadderRank", 
            "contents": "LadderRank"
        }, 
        {
            "trigger": "Integer CUser.LadderTotal", 
            "contents": "LadderTotal"
        }, 
        {
            "trigger": "Real CUser.LadderPoints", 
            "contents": "LadderPoints"
        }, 
        {
            "trigger": "Text CUser.LadderZoneName", 
            "contents": "LadderZoneName"
        }, 
        {
            "trigger": "Text CUser.LadderZoneFlagUrl", 
            "contents": "LadderZoneFlagUrl"
        }, 
        {
            "trigger": "Integer CUser.RequestedClan", 
            "contents": "RequestedClan"
        }, 
        {
            "trigger": "Boolean CUser.RequestsSpectate", 
            "contents": "RequestsSpectate"
        }, 
        {
            "trigger": "Boolean CUser.IsFakeUser", 
            "contents": "IsFakeUser"
        }, 
        {
            "trigger": "EStereoDisplayMode CUser.StereoDisplayMode", 
            "contents": "StereoDisplayMode"
        }, 
        {
            "trigger": "CTitle", 
            "contents": "CTitle"
        }, 
        {
            "trigger": "Text CTitle.TitleId", 
            "contents": "TitleId"
        }, 
        {
            "trigger": "Text CTitle.BaseTitleId", 
            "contents": "BaseTitleId"
        }, 
        {
            "trigger": "Text CTitle.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CTitle.Desc", 
            "contents": "Desc"
        }, 
        {
            "trigger": "Text CTitle.InfoUrl", 
            "contents": "InfoUrl"
        }, 
        {
            "trigger": "Text CTitle.DownloadUrl", 
            "contents": "DownloadUrl"
        }, 
        {
            "trigger": "Text CTitle.TitleVersion", 
            "contents": "TitleVersion"
        }, 
        {
            "trigger": "CMlEvent", 
            "contents": "CMlEvent"
        }, 
        {
            "trigger": "CMlEvent::Type::KeyPress", 
            "contents": "CMlEvent::Type::KeyPress"
        }, 
        {
            "trigger": "CMlEvent::Type::MouseClick", 
            "contents": "CMlEvent::Type::MouseClick"
        }, 
        {
            "trigger": "CMlEvent::Type::MouseOver", 
            "contents": "CMlEvent::Type::MouseOver"
        }, 
        {
            "trigger": "CMlEvent::Type::MouseOut", 
            "contents": "CMlEvent::Type::MouseOut"
        }, 
        {
            "trigger": "CMlEvent::Type::EntrySubmit", 
            "contents": "CMlEvent::Type::EntrySubmit"
        }, 
        {
            "trigger": "CMlEvent::Type::MenuNavigation", 
            "contents": "CMlEvent::Type::MenuNavigation"
        }, 
        {
            "trigger": "CMlEvent::Type::PluginCustomEvent", 
            "contents": "CMlEvent::Type::PluginCustomEvent"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Up", 
            "contents": "CMlEvent::EMenuNavAction::Up"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Right", 
            "contents": "CMlEvent::EMenuNavAction::Right"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Left", 
            "contents": "CMlEvent::EMenuNavAction::Left"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Down", 
            "contents": "CMlEvent::EMenuNavAction::Down"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Select", 
            "contents": "CMlEvent::EMenuNavAction::Select"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::Cancel", 
            "contents": "CMlEvent::EMenuNavAction::Cancel"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::PageUp", 
            "contents": "CMlEvent::EMenuNavAction::PageUp"
        }, 
        {
            "trigger": "CMlEvent::EMenuNavAction::PageDown", 
            "contents": "CMlEvent::EMenuNavAction::PageDown"
        }, 
        {
            "trigger": "Type CMlEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "Integer CMlEvent.KeyCode", 
            "contents": "KeyCode"
        }, 
        {
            "trigger": "Text CMlEvent.KeyName", 
            "contents": "KeyName"
        }, 
        {
            "trigger": "Text CMlEvent.CharPressed", 
            "contents": "CharPressed"
        }, 
        {
            "trigger": "Text CMlEvent.ControlId", 
            "contents": "ControlId"
        }, 
        {
            "trigger": "CMlControl CMlEvent.Control", 
            "contents": "Control"
        }, 
        {
            "trigger": "EMenuNavAction CMlEvent.MenuNavAction", 
            "contents": "MenuNavAction"
        }, 
        {
            "trigger": "Text CMlEvent.CustomEventType", 
            "contents": "CustomEventType"
        }, 
        {
            "trigger": "CXmlManager", 
            "contents": "CXmlManager"
        }, 
        {
            "trigger": "CXmlDocument CXmlManager.Create(Text Contents)", 
            "contents": "Create(${1:Text Contents})"
        }, 
        {
            "trigger": "CXmlDocument CXmlManager.Create(Text Contents, Boolean GenerateText, Boolean GenerateTextRaw, Boolean GenerateTextResursive)", 
            "contents": "Create(${1:Text Contents}, ${2:Boolean GenerateText}, ${3:Boolean GenerateTextRaw}, ${4:Boolean GenerateTextResursive})"
        }, 
        {
            "trigger": "Void CXmlManager.Destroy(CXmlDocument Document)", 
            "contents": "Destroy(${1:CXmlDocument Document})"
        }, 
        {
            "trigger": "CHttpManager", 
            "contents": "CHttpManager"
        }, 
        {
            "trigger": "CHttpRequest CHttpManager.CreateGet(Text Url)", 
            "contents": "CreateGet(${1:Text Url})"
        }, 
        {
            "trigger": "CHttpRequest CHttpManager.CreateGet(Text Url, Boolean UseCache)", 
            "contents": "CreateGet(${1:Text Url}, ${2:Boolean UseCache})"
        }, 
        {
            "trigger": "CHttpRequest CHttpManager.CreatePost(Text Url, Text Resource)", 
            "contents": "CreatePost(${1:Text Url}, ${2:Text Resource})"
        }, 
        {
            "trigger": "Void CHttpManager.Destroy(CHttpRequest Request)", 
            "contents": "Destroy(${1:CHttpRequest Request})"
        }, 
        {
            "trigger": "Boolean CHttpManager.IsValidUrl(Text Url)", 
            "contents": "IsValidUrl(${1:Text Url})"
        }, 
        {
            "trigger": "Integer CHttpManager.SlotsAvailable", 
            "contents": "SlotsAvailable"
        }, 
        {
            "trigger": "CAudioManager", 
            "contents": "CAudioManager"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Alert", 
            "contents": "CAudioManager::ELibSound::Alert"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::ShowDialog", 
            "contents": "CAudioManager::ELibSound::ShowDialog"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::HideDialog", 
            "contents": "CAudioManager::ELibSound::HideDialog"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::ShowMenu", 
            "contents": "CAudioManager::ELibSound::ShowMenu"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::HideMenu", 
            "contents": "CAudioManager::ELibSound::HideMenu"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Focus", 
            "contents": "CAudioManager::ELibSound::Focus"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Valid", 
            "contents": "CAudioManager::ELibSound::Valid"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Start", 
            "contents": "CAudioManager::ELibSound::Start"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Countdown", 
            "contents": "CAudioManager::ELibSound::Countdown"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Victory", 
            "contents": "CAudioManager::ELibSound::Victory"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::ScoreIncrease", 
            "contents": "CAudioManager::ELibSound::ScoreIncrease"
        }, 
        {
            "trigger": "CAudioManager::ELibSound::Checkpoint", 
            "contents": "CAudioManager::ELibSound::Checkpoint"
        }, 
        {
            "trigger": "CAudioSound CAudioManager.CreateSound(Text Url)", 
            "contents": "CreateSound(${1:Text Url})"
        }, 
        {
            "trigger": "CAudioSound CAudioManager.CreateSound(Text Url, Real VolumedB, Boolean IsMusic, Boolean IsLooping, Boolean IsSpatialized)", 
            "contents": "CreateSound(${1:Text Url}, ${2:Real VolumedB}, ${3:Boolean IsMusic}, ${4:Boolean IsLooping}, ${5:Boolean IsSpatialized})"
        }, 
        {
            "trigger": "Void CAudioManager.DestroySound(CAudioSound Sound)", 
            "contents": "DestroySound(${1:CAudioSound Sound})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(CAudioSound Sound, Real VolumedB)", 
            "contents": "PlaySoundEvent(${1:CAudioSound Sound}, ${2:Real VolumedB})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(Text Url, Real VolumedB)", 
            "contents": "PlaySoundEvent(${1:Text Url}, ${2:Real VolumedB})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(ELibSound Sound, Integer SoundVariant, Real VolumedB)", 
            "contents": "PlaySoundEvent(${1:ELibSound Sound}, ${2:Integer SoundVariant}, ${3:Real VolumedB})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(CAudioSound Sound, Real VolumedB, Integer Delay)", 
            "contents": "PlaySoundEvent(${1:CAudioSound Sound}, ${2:Real VolumedB}, ${3:Integer Delay})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(Text Url, Real VolumedB, Integer Delay)", 
            "contents": "PlaySoundEvent(${1:Text Url}, ${2:Real VolumedB}, ${3:Integer Delay})"
        }, 
        {
            "trigger": "Void CAudioManager.PlaySoundEvent(ELibSound Sound, Integer SoundVariant, Real VolumedB, Integer Delay)", 
            "contents": "PlaySoundEvent(${1:ELibSound Sound}, ${2:Integer SoundVariant}, ${3:Real VolumedB}, ${4:Integer Delay})"
        }, 
        {
            "trigger": "Void CAudioManager.ClearAllDelayedSoundsEvents()", 
            "contents": "ClearAllDelayedSoundsEvents()"
        }, 
        {
            "trigger": "Boolean CAudioManager.ForceEnableMusic", 
            "contents": "ForceEnableMusic"
        }, 
        {
            "trigger": "Real CAudioManager.LimitMusicVolumedB", 
            "contents": "LimitMusicVolumedB"
        }, 
        {
            "trigger": "CMlControl", 
            "contents": "CMlControl"
        }, 
        {
            "trigger": "CMlControl::AlignHorizontal::Left", 
            "contents": "CMlControl::AlignHorizontal::Left"
        }, 
        {
            "trigger": "CMlControl::AlignHorizontal::HCenter", 
            "contents": "CMlControl::AlignHorizontal::HCenter"
        }, 
        {
            "trigger": "CMlControl::AlignHorizontal::Right", 
            "contents": "CMlControl::AlignHorizontal::Right"
        }, 
        {
            "trigger": "CMlControl::AlignHorizontal::None", 
            "contents": "CMlControl::AlignHorizontal::None"
        }, 
        {
            "trigger": "CMlControl::AlignVertical::Top", 
            "contents": "CMlControl::AlignVertical::Top"
        }, 
        {
            "trigger": "CMlControl::AlignVertical::VCenter", 
            "contents": "CMlControl::AlignVertical::VCenter"
        }, 
        {
            "trigger": "CMlControl::AlignVertical::Bottom", 
            "contents": "CMlControl::AlignVertical::Bottom"
        }, 
        {
            "trigger": "CMlControl::AlignVertical::None", 
            "contents": "CMlControl::AlignVertical::None"
        }, 
        {
            "trigger": "CMlControl::AlignVertical::VCenter2", 
            "contents": "CMlControl::AlignVertical::VCenter2"
        }, 
        {
            "trigger": "Text CMlControl.ControlId", 
            "contents": "ControlId"
        }, 
        {
            "trigger": "Boolean CMlControl.HasClass(Text Class)", 
            "contents": "HasClass(${1:Text Class})"
        }, 
        {
            "trigger": "Vec2 CMlControl.Size", 
            "contents": "Size"
        }, 
        {
            "trigger": "AlignHorizontal CMlControl.HorizontalAlign", 
            "contents": "HorizontalAlign"
        }, 
        {
            "trigger": "AlignVertical CMlControl.VerticalAlign", 
            "contents": "VerticalAlign"
        }, 
        {
            "trigger": "Boolean CMlControl.Visible", 
            "contents": "Visible"
        }, 
        {
            "trigger": "Vec3 CMlControl.RelativePosition", 
            "contents": "RelativePosition"
        }, 
        {
            "trigger": "Real CMlControl.RelativeScale", 
            "contents": "RelativeScale"
        }, 
        {
            "trigger": "Real CMlControl.RelativeRotation", 
            "contents": "RelativeRotation"
        }, 
        {
            "trigger": "Vec3 CMlControl.AbsolutePosition", 
            "contents": "AbsolutePosition"
        }, 
        {
            "trigger": "Real CMlControl.AbsoluteScale", 
            "contents": "AbsoluteScale"
        }, 
        {
            "trigger": "Real CMlControl.AbsoluteRotation", 
            "contents": "AbsoluteRotation"
        }, 
        {
            "trigger": "Boolean CMlControl.DataAttributeExists(Text DataName)", 
            "contents": "DataAttributeExists(${1:Text DataName})"
        }, 
        {
            "trigger": "Text CMlControl.DataAttributeGet(Text DataName)", 
            "contents": "DataAttributeGet(${1:Text DataName})"
        }, 
        {
            "trigger": "Void CMlControl.DataAttributeSet(Text DataName, Text DataValue)", 
            "contents": "DataAttributeSet(${1:Text DataName}, ${2:Text DataValue})"
        }, 
        {
            "trigger": "Void CMlControl.Show()", 
            "contents": "Show()"
        }, 
        {
            "trigger": "Void CMlControl.Hide()", 
            "contents": "Hide()"
        }, 
        {
            "trigger": "Void CMlControl.Unload()", 
            "contents": "Unload()"
        }, 
        {
            "trigger": "Void CMlControl.Focus()", 
            "contents": "Focus()"
        }, 
        {
            "trigger": "CMlGraphCurve", 
            "contents": "CMlGraphCurve"
        }, 
        {
            "trigger": "Vec3 CMlGraphCurve.Color", 
            "contents": "Color"
        }, 
        {
            "trigger": "Void CMlGraphCurve.SortPoints()", 
            "contents": "SortPoints()"
        }, 
        {
            "trigger": "Text CMlGraphCurve.Style", 
            "contents": "Style"
        }, 
        {
            "trigger": "Real CMlGraphCurve.Width", 
            "contents": "Width"
        }, 
        {
            "trigger": "CMap", 
            "contents": "CMap"
        }, 
        {
            "trigger": "CMapInfo CMap.MapInfo", 
            "contents": "MapInfo"
        }, 
        {
            "trigger": "Text CMap.MapName", 
            "contents": "MapName"
        }, 
        {
            "trigger": "Text CMap.Comments", 
            "contents": "Comments"
        }, 
        {
            "trigger": "Text CMap.AuthorZoneIconUrl", 
            "contents": "AuthorZoneIconUrl"
        }, 
        {
            "trigger": "Text CMap.CollectionName", 
            "contents": "CollectionName"
        }, 
        {
            "trigger": "Text CMap.DecorationName", 
            "contents": "DecorationName"
        }, 
        {
            "trigger": "Text CMap.AuthorLogin", 
            "contents": "AuthorLogin"
        }, 
        {
            "trigger": "Text CMap.AuthorNickName", 
            "contents": "AuthorNickName"
        }, 
        {
            "trigger": "Text CMap.AuthorZonePath", 
            "contents": "AuthorZonePath"
        }, 
        {
            "trigger": "Text CMap.MapType", 
            "contents": "MapType"
        }, 
        {
            "trigger": "Text CMap.MapStyle", 
            "contents": "MapStyle"
        }, 
        {
            "trigger": "Integer CMap.TMObjective_AuthorTime", 
            "contents": "TMObjective_AuthorTime"
        }, 
        {
            "trigger": "Integer CMap.TMObjective_GoldTime", 
            "contents": "TMObjective_GoldTime"
        }, 
        {
            "trigger": "Integer CMap.TMObjective_SilverTime", 
            "contents": "TMObjective_SilverTime"
        }, 
        {
            "trigger": "Integer CMap.TMObjective_BronzeTime", 
            "contents": "TMObjective_BronzeTime"
        }, 
        {
            "trigger": "Integer CMap.TMObjective_NbLaps", 
            "contents": "TMObjective_NbLaps"
        }, 
        {
            "trigger": "Boolean CMap.TMObjective_IsLapRace", 
            "contents": "TMObjective_IsLapRace"
        }, 
        {
            "trigger": "Text CMap.ObjectiveTextAuthor", 
            "contents": "ObjectiveTextAuthor"
        }, 
        {
            "trigger": "Text CMap.ObjectiveTextGold", 
            "contents": "ObjectiveTextGold"
        }, 
        {
            "trigger": "Text CMap.ObjectiveTextSilver", 
            "contents": "ObjectiveTextSilver"
        }, 
        {
            "trigger": "Text CMap.ObjectiveTextBronze", 
            "contents": "ObjectiveTextBronze"
        }, 
        {
            "trigger": "Integer CMap.CopperPrice", 
            "contents": "CopperPrice"
        }, 
        {
            "trigger": "Int3 CMap.Size", 
            "contents": "Size"
        }, 
        {
            "trigger": "CUILayer", 
            "contents": "CUILayer"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::Normal", 
            "contents": "CUILayer::EUILayerType::Normal"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::ScoresTable", 
            "contents": "CUILayer::EUILayerType::ScoresTable"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::ScreenIn3d", 
            "contents": "CUILayer::EUILayerType::ScreenIn3d"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::AltMenu", 
            "contents": "CUILayer::EUILayerType::AltMenu"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::Markers", 
            "contents": "CUILayer::EUILayerType::Markers"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::CutScene", 
            "contents": "CUILayer::EUILayerType::CutScene"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::InGameMenu", 
            "contents": "CUILayer::EUILayerType::InGameMenu"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::EditorPlugin", 
            "contents": "CUILayer::EUILayerType::EditorPlugin"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::ManiaplanetPlugin", 
            "contents": "CUILayer::EUILayerType::ManiaplanetPlugin"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::ManiaplanetMenu", 
            "contents": "CUILayer::EUILayerType::ManiaplanetMenu"
        }, 
        {
            "trigger": "CUILayer::EUILayerType::LoadingScreen", 
            "contents": "CUILayer::EUILayerType::LoadingScreen"
        }, 
        {
            "trigger": "Boolean CUILayer.IsVisible", 
            "contents": "IsVisible"
        }, 
        {
            "trigger": "EUILayerType CUILayer.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "Text CUILayer.AttachId", 
            "contents": "AttachId"
        }, 
        {
            "trigger": "Text CUILayer.ManialinkPage", 
            "contents": "ManialinkPage"
        }, 
        {
            "trigger": "CMlPage CUILayer.LocalPage", 
            "contents": "LocalPage"
        }, 
        {
            "trigger": "CEditorPluginEvent", 
            "contents": "CEditorPluginEvent"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::LayerCustomEvent", 
            "contents": "CEditorPluginEvent::Type::LayerCustomEvent"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::KeyPress", 
            "contents": "CEditorPluginEvent::Type::KeyPress"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::(reserved)", 
            "contents": "CEditorPluginEvent::Type::(reserved)"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::MenuNavigation", 
            "contents": "CEditorPluginEvent::Type::MenuNavigation"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::CursorSelectionBegin", 
            "contents": "CEditorPluginEvent::Type::CursorSelectionBegin"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::CursorSelectionEnd", 
            "contents": "CEditorPluginEvent::Type::CursorSelectionEnd"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::CursorChange", 
            "contents": "CEditorPluginEvent::Type::CursorChange"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::MapModified", 
            "contents": "CEditorPluginEvent::Type::MapModified"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::EditorInput", 
            "contents": "CEditorPluginEvent::Type::EditorInput"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::EditAnchor", 
            "contents": "CEditorPluginEvent::Type::EditAnchor"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::EditObjectives", 
            "contents": "CEditorPluginEvent::Type::EditObjectives"
        }, 
        {
            "trigger": "CEditorPluginEvent::Type::StartValidation", 
            "contents": "CEditorPluginEvent::Type::StartValidation"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::Unknown", 
            "contents": "CEditorPluginEvent::EInput::Unknown"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::Menu", 
            "contents": "CEditorPluginEvent::EInput::Menu"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::SwitchToRace", 
            "contents": "CEditorPluginEvent::EInput::SwitchToRace"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorUp", 
            "contents": "CEditorPluginEvent::EInput::CursorUp"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorRight", 
            "contents": "CEditorPluginEvent::EInput::CursorRight"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorDown", 
            "contents": "CEditorPluginEvent::EInput::CursorDown"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorLeft", 
            "contents": "CEditorPluginEvent::EInput::CursorLeft"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorRaise", 
            "contents": "CEditorPluginEvent::EInput::CursorRaise"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorLower", 
            "contents": "CEditorPluginEvent::EInput::CursorLower"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorTurn", 
            "contents": "CEditorPluginEvent::EInput::CursorTurn"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorPick", 
            "contents": "CEditorPluginEvent::EInput::CursorPick"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorPlace", 
            "contents": "CEditorPluginEvent::EInput::CursorPlace"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CursorDelete", 
            "contents": "CEditorPluginEvent::EInput::CursorDelete"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CameraUp", 
            "contents": "CEditorPluginEvent::EInput::CameraUp"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CameraRight", 
            "contents": "CEditorPluginEvent::EInput::CameraRight"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CameraDown", 
            "contents": "CEditorPluginEvent::EInput::CameraDown"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::CameraLeft", 
            "contents": "CEditorPluginEvent::EInput::CameraLeft"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::IconUp", 
            "contents": "CEditorPluginEvent::EInput::IconUp"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::IconRight", 
            "contents": "CEditorPluginEvent::EInput::IconRight"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::IconDown", 
            "contents": "CEditorPluginEvent::EInput::IconDown"
        }, 
        {
            "trigger": "CEditorPluginEvent::EInput::IconLeft", 
            "contents": "CEditorPluginEvent::EInput::IconLeft"
        }, 
        {
            "trigger": "Type CEditorPluginEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "EInput CEditorPluginEvent.Input", 
            "contents": "Input"
        }, 
        {
            "trigger": "Ident CEditorPluginEvent.EditedAnchorDataId", 
            "contents": "EditedAnchorDataId"
        }, 
        {
            "trigger": "CBlockModel", 
            "contents": "CBlockModel"
        }, 
        {
            "trigger": "CBlockModel::EBaseType::None", 
            "contents": "CBlockModel::EBaseType::None"
        }, 
        {
            "trigger": "CBlockModel::EBaseType::Conductor", 
            "contents": "CBlockModel::EBaseType::Conductor"
        }, 
        {
            "trigger": "CBlockModel::EBaseType::Generator", 
            "contents": "CBlockModel::EBaseType::Generator"
        }, 
        {
            "trigger": "CBlockModel::EBaseType::Collector", 
            "contents": "CBlockModel::EBaseType::Collector"
        }, 
        {
            "trigger": "CBlockModel::EWayPointType::Start", 
            "contents": "CBlockModel::EWayPointType::Start"
        }, 
        {
            "trigger": "CBlockModel::EWayPointType::Finish", 
            "contents": "CBlockModel::EWayPointType::Finish"
        }, 
        {
            "trigger": "CBlockModel::EWayPointType::Checkpoint", 
            "contents": "CBlockModel::EWayPointType::Checkpoint"
        }, 
        {
            "trigger": "CBlockModel::EWayPointType::None", 
            "contents": "CBlockModel::EWayPointType::None"
        }, 
        {
            "trigger": "CBlockModel::EWayPointType::StartFinish", 
            "contents": "CBlockModel::EWayPointType::StartFinish"
        }, 
        {
            "trigger": "CBlockModel::EProdState::Obsolete", 
            "contents": "CBlockModel::EProdState::Obsolete"
        }, 
        {
            "trigger": "CBlockModel::EProdState::GameBox", 
            "contents": "CBlockModel::EProdState::GameBox"
        }, 
        {
            "trigger": "CBlockModel::EProdState::DevBuild", 
            "contents": "CBlockModel::EProdState::DevBuild"
        }, 
        {
            "trigger": "CBlockModel::EProdState::Release", 
            "contents": "CBlockModel::EProdState::Release"
        }, 
        {
            "trigger": "Text CBlockModel.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Boolean CBlockModel.IsRoad", 
            "contents": "IsRoad"
        }, 
        {
            "trigger": "Boolean CBlockModel.IsTerrain", 
            "contents": "IsTerrain"
        }, 
        {
            "trigger": "EWayPointType CBlockModel.WaypointType", 
            "contents": "WaypointType"
        }, 
        {
            "trigger": "Boolean CBlockModel.NoRespawn", 
            "contents": "NoRespawn"
        }, 
        {
            "trigger": "CBlockModelVariantGround CBlockModel.VariantGround", 
            "contents": "VariantGround"
        }, 
        {
            "trigger": "CBlockModelVariantAir CBlockModel.VariantAir", 
            "contents": "VariantAir"
        }, 
        {
            "trigger": "CMacroblockModel", 
            "contents": "CMacroblockModel"
        }, 
        {
            "trigger": "Boolean CMacroblockModel.IsGround", 
            "contents": "IsGround"
        }, 
        {
            "trigger": "Boolean CMacroblockModel.HasStart", 
            "contents": "HasStart"
        }, 
        {
            "trigger": "Boolean CMacroblockModel.HasFinish", 
            "contents": "HasFinish"
        }, 
        {
            "trigger": "Boolean CMacroblockModel.HasCheckpoint", 
            "contents": "HasCheckpoint"
        }, 
        {
            "trigger": "CBlockModel CMacroblockModel.GeneratedBlockModel", 
            "contents": "GeneratedBlockModel"
        }, 
        {
            "trigger": "Text CMacroblockModel.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "CItemAnchor", 
            "contents": "CItemAnchor"
        }, 
        {
            "trigger": "CItemAnchor::CardinalDirections::North", 
            "contents": "CItemAnchor::CardinalDirections::North"
        }, 
        {
            "trigger": "CItemAnchor::CardinalDirections::East", 
            "contents": "CItemAnchor::CardinalDirections::East"
        }, 
        {
            "trigger": "CItemAnchor::CardinalDirections::South", 
            "contents": "CItemAnchor::CardinalDirections::South"
        }, 
        {
            "trigger": "CItemAnchor::CardinalDirections::West", 
            "contents": "CItemAnchor::CardinalDirections::West"
        }, 
        {
            "trigger": "Vec3 CItemAnchor.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "CBlock", 
            "contents": "CBlock"
        }, 
        {
            "trigger": "CBlock::CardinalDirections::North", 
            "contents": "CBlock::CardinalDirections::North"
        }, 
        {
            "trigger": "CBlock::CardinalDirections::East", 
            "contents": "CBlock::CardinalDirections::East"
        }, 
        {
            "trigger": "CBlock::CardinalDirections::South", 
            "contents": "CBlock::CardinalDirections::South"
        }, 
        {
            "trigger": "CBlock::CardinalDirections::West", 
            "contents": "CBlock::CardinalDirections::West"
        }, 
        {
            "trigger": "Integer CBlock.BlockScriptId", 
            "contents": "BlockScriptId"
        }, 
        {
            "trigger": "Boolean CBlock.CanHaveAnchor", 
            "contents": "CanHaveAnchor"
        }, 
        {
            "trigger": "Void CBlock.UseDefaultAnchor()", 
            "contents": "UseDefaultAnchor()"
        }, 
        {
            "trigger": "Void CBlock.UseCustomAnchor()", 
            "contents": "UseCustomAnchor()"
        }, 
        {
            "trigger": "Int3 CBlock.Coord", 
            "contents": "Coord"
        }, 
        {
            "trigger": "CardinalDirections CBlock.Direction", 
            "contents": "Direction"
        }, 
        {
            "trigger": "CBlockModel CBlock.BlockModel", 
            "contents": "BlockModel"
        }, 
        {
            "trigger": "CAnchorData", 
            "contents": "CAnchorData"
        }, 
        {
            "trigger": "Text CAnchorData.DefaultTag", 
            "contents": "DefaultTag"
        }, 
        {
            "trigger": "Integer CAnchorData.DefaultOrder", 
            "contents": "DefaultOrder"
        }, 
        {
            "trigger": "Text CAnchorData.Tag", 
            "contents": "Tag"
        }, 
        {
            "trigger": "Integer CAnchorData.Order", 
            "contents": "Order"
        }, 
        {
            "trigger": "CMode", 
            "contents": "CMode"
        }, 
        {
            "trigger": "CMode::EMedal::None", 
            "contents": "CMode::EMedal::None"
        }, 
        {
            "trigger": "CMode::EMedal::Finished", 
            "contents": "CMode::EMedal::Finished"
        }, 
        {
            "trigger": "CMode::EMedal::Bronze", 
            "contents": "CMode::EMedal::Bronze"
        }, 
        {
            "trigger": "CMode::EMedal::Silver", 
            "contents": "CMode::EMedal::Silver"
        }, 
        {
            "trigger": "CMode::EMedal::Gold", 
            "contents": "CMode::EMedal::Gold"
        }, 
        {
            "trigger": "CMode::EMedal::Author", 
            "contents": "CMode::EMedal::Author"
        }, 
        {
            "trigger": "Text CMode.ModeStatusMessage", 
            "contents": "ModeStatusMessage"
        }, 
        {
            "trigger": "CTitle CMode.LoadedTitle", 
            "contents": "LoadedTitle"
        }, 
        {
            "trigger": "Text CMode.ServerLogin", 
            "contents": "ServerLogin"
        }, 
        {
            "trigger": "Text CMode.ServerName", 
            "contents": "ServerName"
        }, 
        {
            "trigger": "Text CMode.ServerModeName", 
            "contents": "ServerModeName"
        }, 
        {
            "trigger": "Text CMode.MapName", 
            "contents": "MapName"
        }, 
        {
            "trigger": "CMap CMode.Map", 
            "contents": "Map"
        }, 
        {
            "trigger": "Text CMode.MapPlayerModelName", 
            "contents": "MapPlayerModelName"
        }, 
        {
            "trigger": "Text CMode.NeutralEmblemUrl", 
            "contents": "NeutralEmblemUrl"
        }, 
        {
            "trigger": "Text CMode.ForcedClubLinkUrl1", 
            "contents": "ForcedClubLinkUrl1"
        }, 
        {
            "trigger": "Text CMode.ForcedClubLinkUrl2", 
            "contents": "ForcedClubLinkUrl2"
        }, 
        {
            "trigger": "Void CMode.TweakTeamColorsToAvoidHueOverlap()", 
            "contents": "TweakTeamColorsToAvoidHueOverlap()"
        }, 
        {
            "trigger": "Integer CMode.Now", 
            "contents": "Now"
        }, 
        {
            "trigger": "Integer CMode.Period", 
            "contents": "Period"
        }, 
        {
            "trigger": "Boolean CMode.MatchEndRequested", 
            "contents": "MatchEndRequested"
        }, 
        {
            "trigger": "Boolean CMode.ServerShutdownRequested", 
            "contents": "ServerShutdownRequested"
        }, 
        {
            "trigger": "Boolean CMode.MapLoaded", 
            "contents": "MapLoaded"
        }, 
        {
            "trigger": "Void CMode.RequestLoadMap()", 
            "contents": "RequestLoadMap()"
        }, 
        {
            "trigger": "Void CMode.RequestUnloadMap()", 
            "contents": "RequestUnloadMap()"
        }, 
        {
            "trigger": "Integer CMode.NextMapIndex", 
            "contents": "NextMapIndex"
        }, 
        {
            "trigger": "CUIConfigMgr CMode.UIManager", 
            "contents": "UIManager"
        }, 
        {
            "trigger": "Void CMode.Ladder_OpenMatch_Request()", 
            "contents": "Ladder_OpenMatch_Request()"
        }, 
        {
            "trigger": "Void CMode.Ladder_AddPlayer(CScore PlayerScore)", 
            "contents": "Ladder_AddPlayer(${1:CScore PlayerScore})"
        }, 
        {
            "trigger": "Void CMode.Ladder_OpenMatch_BeginRequest()", 
            "contents": "Ladder_OpenMatch_BeginRequest()"
        }, 
        {
            "trigger": "Void CMode.Ladder_OpenMatch_AddPlayer(CScore PlayerScore)", 
            "contents": "Ladder_OpenMatch_AddPlayer(${1:CScore PlayerScore})"
        }, 
        {
            "trigger": "Void CMode.Ladder_OpenMatch_EndRequest()", 
            "contents": "Ladder_OpenMatch_EndRequest()"
        }, 
        {
            "trigger": "Void CMode.Ladder_CloseMatchRequest()", 
            "contents": "Ladder_CloseMatchRequest()"
        }, 
        {
            "trigger": "Void CMode.Ladder_CancelMatchRequest()", 
            "contents": "Ladder_CancelMatchRequest()"
        }, 
        {
            "trigger": "Boolean CMode.Ladder_RequestInProgress", 
            "contents": "Ladder_RequestInProgress"
        }, 
        {
            "trigger": "Void CMode.Ladder_SetResultsVersion(Integer Version)", 
            "contents": "Ladder_SetResultsVersion(${1:Integer Version})"
        }, 
        {
            "trigger": "Void CMode.Ladder_SetMatchMakingMatchId(Integer MatchId)", 
            "contents": "Ladder_SetMatchMakingMatchId(${1:Integer MatchId})"
        }, 
        {
            "trigger": "Void CMode.Ladder_EnableChallengeMode(Boolean Enable)", 
            "contents": "Ladder_EnableChallengeMode(${1:Boolean Enable})"
        }, 
        {
            "trigger": "Boolean CMode.Admin_KickUser(CUser User, Text Reason)", 
            "contents": "Admin_KickUser(${1:CUser User}, ${2:Text Reason})"
        }, 
        {
            "trigger": "Void CMode.Admin_SetLobbyInfo(Boolean IsLobby, Integer LobbyPlayerCount, Integer LobbyMaxPlayerCount, Real LobbyPlayersLevel)", 
            "contents": "Admin_SetLobbyInfo(${1:Boolean IsLobby}, ${2:Integer LobbyPlayerCount}, ${3:Integer LobbyMaxPlayerCount}, ${4:Real LobbyPlayersLevel})"
        }, 
        {
            "trigger": "Void CMode.AutoTeamBalance()", 
            "contents": "AutoTeamBalance()"
        }, 
        {
            "trigger": "Void CMode.Solo_SetNewRecord(CScore PlayerScore, EMedal PlayerScore)", 
            "contents": "Solo_SetNewRecord(${1:CScore PlayerScore}, ${2:EMedal PlayerScore})"
        }, 
        {
            "trigger": "Boolean CMode.Solo_NewRecordSequenceInProgress", 
            "contents": "Solo_NewRecordSequenceInProgress"
        }, 
        {
            "trigger": "CXmlRpc CMode.XmlRpc", 
            "contents": "XmlRpc"
        }, 
        {
            "trigger": "CXmlManager CMode.Xml", 
            "contents": "Xml"
        }, 
        {
            "trigger": "CHttpManager CMode.Http", 
            "contents": "Http"
        }, 
        {
            "trigger": "Integer CMode.Synchro_AddBarrier()", 
            "contents": "Synchro_AddBarrier()"
        }, 
        {
            "trigger": "Boolean CMode.Synchro_BarrierReached(Integer Barrier)", 
            "contents": "Synchro_BarrierReached(${1:Integer Barrier})"
        }, 
        {
            "trigger": "Boolean CMode.Users_AreAllies(CUser User1, CUser User2)", 
            "contents": "Users_AreAllies(${1:CUser User1}, ${2:CUser User2})"
        }, 
        {
            "trigger": "Void CMode.Users_RequestSwitchToSpectator(CUser User)", 
            "contents": "Users_RequestSwitchToSpectator(${1:CUser User})"
        }, 
        {
            "trigger": "CUser CMode.Users_CreateFake(Text NickName, Integer RequestedTeam)", 
            "contents": "Users_CreateFake(${1:Text NickName}, ${2:Integer RequestedTeam})"
        }, 
        {
            "trigger": "Void CMode.Users_DestroyFake(CUser User)", 
            "contents": "Users_DestroyFake(${1:CUser User})"
        }, 
        {
            "trigger": "Void CMode.Users_SetNbFakeUsers(Integer NbTeam1, Integer NbTeam2)", 
            "contents": "Users_SetNbFakeUsers(${1:Integer NbTeam1}, ${2:Integer NbTeam2})"
        }, 
        {
            "trigger": "Void CMode.Users_DestroyAllFakes()", 
            "contents": "Users_DestroyAllFakes()"
        }, 
        {
            "trigger": "Void CMode.ItemList_Begin()", 
            "contents": "ItemList_Begin()"
        }, 
        {
            "trigger": "Ident CMode.ItemList_Add(Text ModelName)", 
            "contents": "ItemList_Add(${1:Text ModelName})"
        }, 
        {
            "trigger": "Ident CMode.ItemList_AddWithSkin(Text ModelName, Text SkinName)", 
            "contents": "ItemList_AddWithSkin(${1:Text ModelName}, ${2:Text SkinName})"
        }, 
        {
            "trigger": "Void CMode.ItemList_End()", 
            "contents": "ItemList_End()"
        }, 
        {
            "trigger": "Void CMode.DemoToken_StartUsingToken()", 
            "contents": "DemoToken_StartUsingToken()"
        }, 
        {
            "trigger": "Void CMode.DemoToken_StopUsingToken()", 
            "contents": "DemoToken_StopUsingToken()"
        }, 
        {
            "trigger": "Void CMode.DemoToken_GetAndUseToken(CUser User)", 
            "contents": "DemoToken_GetAndUseToken(${1:CUser User})"
        }, 
        {
            "trigger": "Void CMode.ActionList_Begin()", 
            "contents": "ActionList_Begin()"
        }, 
        {
            "trigger": "Ident CMode.ActionList_Add(Text ActionName)", 
            "contents": "ActionList_Add(${1:Text ActionName})"
        }, 
        {
            "trigger": "Void CMode.ActionList_End()", 
            "contents": "ActionList_End()"
        }, 
        {
            "trigger": "Boolean CMode.UseMinimap", 
            "contents": "UseMinimap"
        }, 
        {
            "trigger": "Boolean CMode.Replay_AutoStart", 
            "contents": "Replay_AutoStart"
        }, 
        {
            "trigger": "Void CMode.Replay_Start()", 
            "contents": "Replay_Start()"
        }, 
        {
            "trigger": "Void CMode.Replay_Stop()", 
            "contents": "Replay_Stop()"
        }, 
        {
            "trigger": "CSmPlayer", 
            "contents": "CSmPlayer"
        }, 
        {
            "trigger": "CSmPlayer::ESpawnStatus::NotSpawned", 
            "contents": "CSmPlayer::ESpawnStatus::NotSpawned"
        }, 
        {
            "trigger": "CSmPlayer::ESpawnStatus::Spawning", 
            "contents": "CSmPlayer::ESpawnStatus::Spawning"
        }, 
        {
            "trigger": "CSmPlayer::ESpawnStatus::Spawned", 
            "contents": "CSmPlayer::ESpawnStatus::Spawned"
        }, 
        {
            "trigger": "CSmScore CSmPlayer.Score", 
            "contents": "Score"
        }, 
        {
            "trigger": "ESpawnStatus CSmPlayer.SpawnStatus", 
            "contents": "SpawnStatus"
        }, 
        {
            "trigger": "Integer CSmPlayer.StartTime", 
            "contents": "StartTime"
        }, 
        {
            "trigger": "Integer CSmPlayer.EndTime", 
            "contents": "EndTime"
        }, 
        {
            "trigger": "Real CSmPlayer.AmmoGain", 
            "contents": "AmmoGain"
        }, 
        {
            "trigger": "Real CSmPlayer.AmmoPower", 
            "contents": "AmmoPower"
        }, 
        {
            "trigger": "Boolean CSmPlayer.AutoSwitchWeapon", 
            "contents": "AutoSwitchWeapon"
        }, 
        {
            "trigger": "Integer CSmPlayer.CurWeapon", 
            "contents": "CurWeapon"
        }, 
        {
            "trigger": "Integer CSmPlayer.CurAmmo", 
            "contents": "CurAmmo"
        }, 
        {
            "trigger": "Integer CSmPlayer.CurAmmoMax", 
            "contents": "CurAmmoMax"
        }, 
        {
            "trigger": "Integer CSmPlayer.CurAmmoUnit", 
            "contents": "CurAmmoUnit"
        }, 
        {
            "trigger": "Integer CSmPlayer.Armor", 
            "contents": "Armor"
        }, 
        {
            "trigger": "Integer CSmPlayer.ArmorMax", 
            "contents": "ArmorMax"
        }, 
        {
            "trigger": "Integer CSmPlayer.ArmorGain", 
            "contents": "ArmorGain"
        }, 
        {
            "trigger": "Integer CSmPlayer.ArmorReplenishGain", 
            "contents": "ArmorReplenishGain"
        }, 
        {
            "trigger": "Real CSmPlayer.ArmorPower", 
            "contents": "ArmorPower"
        }, 
        {
            "trigger": "Integer CSmPlayer.Stamina", 
            "contents": "Stamina"
        }, 
        {
            "trigger": "Real CSmPlayer.StaminaMax", 
            "contents": "StaminaMax"
        }, 
        {
            "trigger": "Real CSmPlayer.StaminaGain", 
            "contents": "StaminaGain"
        }, 
        {
            "trigger": "Real CSmPlayer.StaminaPower", 
            "contents": "StaminaPower"
        }, 
        {
            "trigger": "Real CSmPlayer.SpeedPower", 
            "contents": "SpeedPower"
        }, 
        {
            "trigger": "Real CSmPlayer.JumpPower", 
            "contents": "JumpPower"
        }, 
        {
            "trigger": "Boolean CSmPlayer.AllowWallJump", 
            "contents": "AllowWallJump"
        }, 
        {
            "trigger": "Boolean CSmPlayer.AllowProgressiveJump", 
            "contents": "AllowProgressiveJump"
        }, 
        {
            "trigger": "Boolean CSmPlayer.UseAlternateWeaponVisual", 
            "contents": "UseAlternateWeaponVisual"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsHighlighted", 
            "contents": "IsHighlighted"
        }, 
        {
            "trigger": "Real CSmPlayer.EnergyLevel", 
            "contents": "EnergyLevel"
        }, 
        {
            "trigger": "Vec3 CSmPlayer.ForceColor", 
            "contents": "ForceColor"
        }, 
        {
            "trigger": "Ident CSmPlayer.ForceModelId", 
            "contents": "ForceModelId"
        }, 
        {
            "trigger": "Boolean CSmPlayer.HasShield", 
            "contents": "HasShield"
        }, 
        {
            "trigger": "Real CSmPlayer.ThrowSpeed", 
            "contents": "ThrowSpeed"
        }, 
        {
            "trigger": "Integer CSmPlayer.CurrentClan", 
            "contents": "CurrentClan"
        }, 
        {
            "trigger": "Integer CSmPlayer.IdleDuration", 
            "contents": "IdleDuration"
        }, 
        {
            "trigger": "Vec3 CSmPlayer.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Real CSmPlayer.AimYaw", 
            "contents": "AimYaw"
        }, 
        {
            "trigger": "Real CSmPlayer.AimPitch", 
            "contents": "AimPitch"
        }, 
        {
            "trigger": "Vec3 CSmPlayer.AimDirection", 
            "contents": "AimDirection"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsUnderground", 
            "contents": "IsUnderground"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsTouchingGround", 
            "contents": "IsTouchingGround"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsInAir", 
            "contents": "IsInAir"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechGround", 
            "contents": "IsOnTechGround"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechLaser", 
            "contents": "IsOnTechLaser"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechArrow", 
            "contents": "IsOnTechArrow"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechArmor", 
            "contents": "IsOnTechArmor"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechSafeZone", 
            "contents": "IsOnTechSafeZone"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTech", 
            "contents": "IsOnTech"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsOnTechNoWeapon", 
            "contents": "IsOnTechNoWeapon"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsInWater", 
            "contents": "IsInWater"
        }, 
        {
            "trigger": "Vec3 CSmPlayer.Velocity", 
            "contents": "Velocity"
        }, 
        {
            "trigger": "Real CSmPlayer.Speed", 
            "contents": "Speed"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsInOffZone", 
            "contents": "IsInOffZone"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsCapturing", 
            "contents": "IsCapturing"
        }, 
        {
            "trigger": "CSmMapLandmark CSmPlayer.CapturedLandmark", 
            "contents": "CapturedLandmark"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsFakePlayer", 
            "contents": "IsFakePlayer"
        }, 
        {
            "trigger": "Boolean CSmPlayer.IsBot", 
            "contents": "IsBot"
        }, 
        {
            "trigger": "CSmPlayerDriver CSmPlayer.Driver", 
            "contents": "Driver"
        }, 
        {
            "trigger": "CSmModeEvent", 
            "contents": "CSmModeEvent"
        }, 
        {
            "trigger": "CSmModeEvent::EType::Unknown", 
            "contents": "CSmModeEvent::EType::Unknown"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnShoot", 
            "contents": "CSmModeEvent::EType::OnShoot"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnHit", 
            "contents": "CSmModeEvent::EType::OnHit"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnNearMiss", 
            "contents": "CSmModeEvent::EType::OnNearMiss"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnArmorEmpty", 
            "contents": "CSmModeEvent::EType::OnArmorEmpty"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnCapture", 
            "contents": "CSmModeEvent::EType::OnCapture"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnShotDeny", 
            "contents": "CSmModeEvent::EType::OnShotDeny"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnFallDamage", 
            "contents": "CSmModeEvent::EType::OnFallDamage"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnCommand", 
            "contents": "CSmModeEvent::EType::OnCommand"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerAdded", 
            "contents": "CSmModeEvent::EType::OnPlayerAdded"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerRemoved", 
            "contents": "CSmModeEvent::EType::OnPlayerRemoved"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerRequestRespawn", 
            "contents": "CSmModeEvent::EType::OnPlayerRequestRespawn"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnActionCustomEvent", 
            "contents": "CSmModeEvent::EType::OnActionCustomEvent"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnActionEvent", 
            "contents": "CSmModeEvent::EType::OnActionEvent"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerTouchesObject", 
            "contents": "CSmModeEvent::EType::OnPlayerTouchesObject"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerThrowsObject", 
            "contents": "CSmModeEvent::EType::OnPlayerThrowsObject"
        }, 
        {
            "trigger": "CSmModeEvent::EType::OnPlayerRequestActionChange", 
            "contents": "CSmModeEvent::EType::OnPlayerRequestActionChange"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_A", 
            "contents": "CSmModeEvent::EActionSlot::Slot_A"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_B", 
            "contents": "CSmModeEvent::EActionSlot::Slot_B"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_C", 
            "contents": "CSmModeEvent::EActionSlot::Slot_C"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_D", 
            "contents": "CSmModeEvent::EActionSlot::Slot_D"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_E", 
            "contents": "CSmModeEvent::EActionSlot::Slot_E"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_F", 
            "contents": "CSmModeEvent::EActionSlot::Slot_F"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_G", 
            "contents": "CSmModeEvent::EActionSlot::Slot_G"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlot::Slot_H", 
            "contents": "CSmModeEvent::EActionSlot::Slot_H"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Weapon", 
            "contents": "CSmModeEvent::EActionInput::Weapon"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Movement", 
            "contents": "CSmModeEvent::EActionInput::Movement"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Activable1", 
            "contents": "CSmModeEvent::EActionInput::Activable1"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Activable2", 
            "contents": "CSmModeEvent::EActionInput::Activable2"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Activable3", 
            "contents": "CSmModeEvent::EActionInput::Activable3"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Activable4", 
            "contents": "CSmModeEvent::EActionInput::Activable4"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Consumable1", 
            "contents": "CSmModeEvent::EActionInput::Consumable1"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::Consumable2", 
            "contents": "CSmModeEvent::EActionInput::Consumable2"
        }, 
        {
            "trigger": "CSmModeEvent::EActionInput::None", 
            "contents": "CSmModeEvent::EActionInput::None"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Weapon", 
            "contents": "CSmModeEvent::EActionSlots::Weapon"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Movement", 
            "contents": "CSmModeEvent::EActionSlots::Movement"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Activable1", 
            "contents": "CSmModeEvent::EActionSlots::Activable1"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Activable2", 
            "contents": "CSmModeEvent::EActionSlots::Activable2"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Activable3", 
            "contents": "CSmModeEvent::EActionSlots::Activable3"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::Activable4", 
            "contents": "CSmModeEvent::EActionSlots::Activable4"
        }, 
        {
            "trigger": "CSmModeEvent::EActionSlots::None", 
            "contents": "CSmModeEvent::EActionSlots::None"
        }, 
        {
            "trigger": "EType CSmModeEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "CSmPlayer CSmModeEvent.Player", 
            "contents": "Player"
        }, 
        {
            "trigger": "Integer CSmModeEvent.Damage", 
            "contents": "Damage"
        }, 
        {
            "trigger": "CSmObject CSmModeEvent.VictimObject", 
            "contents": "VictimObject"
        }, 
        {
            "trigger": "Integer CSmModeEvent.ShooterPoints", 
            "contents": "ShooterPoints"
        }, 
        {
            "trigger": "CSmPlayer CSmModeEvent.Shooter", 
            "contents": "Shooter"
        }, 
        {
            "trigger": "CSmPlayer CSmModeEvent.Victim", 
            "contents": "Victim"
        }, 
        {
            "trigger": "Real CSmModeEvent.Height", 
            "contents": "Height"
        }, 
        {
            "trigger": "Real CSmModeEvent.MissDist", 
            "contents": "MissDist"
        }, 
        {
            "trigger": "Integer CSmModeEvent.WeaponNum", 
            "contents": "WeaponNum"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.ShooterUsedAction", 
            "contents": "ShooterUsedAction"
        }, 
        {
            "trigger": "Integer CSmModeEvent.ShooterWeaponNum", 
            "contents": "ShooterWeaponNum"
        }, 
        {
            "trigger": "EActionSlot CSmModeEvent.ShooterActionSlot", 
            "contents": "ShooterActionSlot"
        }, 
        {
            "trigger": "Text CSmModeEvent.ShooterActionId", 
            "contents": "ShooterActionId"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.VictimUsedAction", 
            "contents": "VictimUsedAction"
        }, 
        {
            "trigger": "Integer CSmModeEvent.VictimWeaponNum", 
            "contents": "VictimWeaponNum"
        }, 
        {
            "trigger": "EActionSlot CSmModeEvent.VictimActionSlot", 
            "contents": "VictimActionSlot"
        }, 
        {
            "trigger": "Text CSmModeEvent.VictimActionId", 
            "contents": "VictimActionId"
        }, 
        {
            "trigger": "EActionSlot CSmModeEvent.Action_Slot", 
            "contents": "Action_Slot"
        }, 
        {
            "trigger": "EActionInput CSmModeEvent.ActionInput", 
            "contents": "ActionInput"
        }, 
        {
            "trigger": "Text CSmModeEvent.ActionId", 
            "contents": "ActionId"
        }, 
        {
            "trigger": "Text CSmModeEvent.Param1", 
            "contents": "Param1"
        }, 
        {
            "trigger": "CSmObject CSmModeEvent.Object", 
            "contents": "Object"
        }, 
        {
            "trigger": "CSmBlockPole CSmModeEvent.BlockPole", 
            "contents": "BlockPole"
        }, 
        {
            "trigger": "CSmMapLandmark CSmModeEvent.Landmark", 
            "contents": "Landmark"
        }, 
        {
            "trigger": "Ident CSmModeEvent.PlayerId", 
            "contents": "PlayerId"
        }, 
        {
            "trigger": "CUser CSmModeEvent.User", 
            "contents": "User"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.PlayerWasSpawned", 
            "contents": "PlayerWasSpawned"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.PlayerWasInLadderMatch", 
            "contents": "PlayerWasInLadderMatch"
        }, 
        {
            "trigger": "Vec3 CSmModeEvent.PlayerLastPosition", 
            "contents": "PlayerLastPosition"
        }, 
        {
            "trigger": "Vec3 CSmModeEvent.PlayerLastAimDirection", 
            "contents": "PlayerLastAimDirection"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.GiveUp", 
            "contents": "GiveUp"
        }, 
        {
            "trigger": "Text CSmModeEvent.CommandName", 
            "contents": "CommandName"
        }, 
        {
            "trigger": "Boolean CSmModeEvent.CommandValueBoolean", 
            "contents": "CommandValueBoolean"
        }, 
        {
            "trigger": "Integer CSmModeEvent.CommandValueInteger", 
            "contents": "CommandValueInteger"
        }, 
        {
            "trigger": "Real CSmModeEvent.CommandValueReal", 
            "contents": "CommandValueReal"
        }, 
        {
            "trigger": "Text CSmModeEvent.CommandValueText", 
            "contents": "CommandValueText"
        }, 
        {
            "trigger": "Integer CSmModeEvent.ActionChange", 
            "contents": "ActionChange"
        }, 
        {
            "trigger": "CSmMapBase", 
            "contents": "CSmMapBase"
        }, 
        {
            "trigger": "Integer CSmMapBase.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Boolean CSmMapBase.IsActive", 
            "contents": "IsActive"
        }, 
        {
            "trigger": "Integer CSmMapBase.NumberOfCollectors", 
            "contents": "NumberOfCollectors"
        }, 
        {
            "trigger": "CSmMapLandmark", 
            "contents": "CSmMapLandmark"
        }, 
        {
            "trigger": "Text CSmMapLandmark.Tag", 
            "contents": "Tag"
        }, 
        {
            "trigger": "Integer CSmMapLandmark.Order", 
            "contents": "Order"
        }, 
        {
            "trigger": "Vec3 CSmMapLandmark.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "CSmMapBase CSmMapLandmark.Base", 
            "contents": "Base"
        }, 
        {
            "trigger": "CSmMapGate CSmMapLandmark.Gate", 
            "contents": "Gate"
        }, 
        {
            "trigger": "CSmMapGauge CSmMapLandmark.Gauge", 
            "contents": "Gauge"
        }, 
        {
            "trigger": "CSmMapSector CSmMapLandmark.Sector", 
            "contents": "Sector"
        }, 
        {
            "trigger": "CSmMapPlayerSpawn CSmMapLandmark.PlayerSpawn", 
            "contents": "PlayerSpawn"
        }, 
        {
            "trigger": "CSmMapBotPath CSmMapLandmark.BotPath", 
            "contents": "BotPath"
        }, 
        {
            "trigger": "CSmMapObjectAnchor CSmMapLandmark.ObjectAnchor", 
            "contents": "ObjectAnchor"
        }, 
        {
            "trigger": "CSmScore", 
            "contents": "CSmScore"
        }, 
        {
            "trigger": "Integer CSmScore.TeamNum", 
            "contents": "TeamNum"
        }, 
        {
            "trigger": "Integer CSmScore.Points", 
            "contents": "Points"
        }, 
        {
            "trigger": "Integer CSmScore.RoundPoints", 
            "contents": "RoundPoints"
        }, 
        {
            "trigger": "Integer CSmScore.NbEliminationsInflicted", 
            "contents": "NbEliminationsInflicted"
        }, 
        {
            "trigger": "Integer CSmScore.NbEliminationsTaken", 
            "contents": "NbEliminationsTaken"
        }, 
        {
            "trigger": "Integer CSmScore.NbRespawnsRequested", 
            "contents": "NbRespawnsRequested"
        }, 
        {
            "trigger": "Integer CSmScore.DamageInflicted", 
            "contents": "DamageInflicted"
        }, 
        {
            "trigger": "Integer CSmScore.DamageTaken", 
            "contents": "DamageTaken"
        }, 
        {
            "trigger": "Void CSmScore.Clear()", 
            "contents": "Clear()"
        }, 
        {
            "trigger": "CSmObject", 
            "contents": "CSmObject"
        }, 
        {
            "trigger": "CSmObject::EStatus::OnPlayer", 
            "contents": "CSmObject::EStatus::OnPlayer"
        }, 
        {
            "trigger": "CSmObject::EStatus::OnAnchor", 
            "contents": "CSmObject::EStatus::OnAnchor"
        }, 
        {
            "trigger": "CSmObject::EStatus::InWorld", 
            "contents": "CSmObject::EStatus::InWorld"
        }, 
        {
            "trigger": "CSmObject::EStatus::Unspawned", 
            "contents": "CSmObject::EStatus::Unspawned"
        }, 
        {
            "trigger": "EStatus CSmObject.Status", 
            "contents": "Status"
        }, 
        {
            "trigger": "Ident CSmObject.ModelId", 
            "contents": "ModelId"
        }, 
        {
            "trigger": "Void CSmObject.SetAnchor(CSmMapObjectAnchor ObjectAnchor)", 
            "contents": "SetAnchor(${1:CSmMapObjectAnchor ObjectAnchor})"
        }, 
        {
            "trigger": "Void CSmObject.SetPlayer(CSmPlayer Player)", 
            "contents": "SetPlayer(${1:CSmPlayer Player})"
        }, 
        {
            "trigger": "Void CSmObject.SetPosition(Vec3 Position)", 
            "contents": "SetPosition(${1:Vec3 Position})"
        }, 
        {
            "trigger": "Void CSmObject.SetPositionAndVel(Vec3 Position, Vec3 Vel)", 
            "contents": "SetPositionAndVel(${1:Vec3 Position}, ${2:Vec3 Vel})"
        }, 
        {
            "trigger": "Void CSmObject.SetUnspawned()", 
            "contents": "SetUnspawned()"
        }, 
        {
            "trigger": "CSmPlayer CSmObject.Player", 
            "contents": "Player"
        }, 
        {
            "trigger": "Vec3 CSmObject.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Vec3 CSmObject.Vel", 
            "contents": "Vel"
        }, 
        {
            "trigger": "Integer CSmObject.MachineState", 
            "contents": "MachineState"
        }, 
        {
            "trigger": "Boolean CSmObject.Throwable", 
            "contents": "Throwable"
        }, 
        {
            "trigger": "CMlScriptIngame", 
            "contents": "CMlScriptIngame"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Default", 
            "contents": "CMlScriptIngame::EUISound::Default"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Silence", 
            "contents": "CMlScriptIngame::EUISound::Silence"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::StartMatch", 
            "contents": "CMlScriptIngame::EUISound::StartMatch"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::EndMatch", 
            "contents": "CMlScriptIngame::EUISound::EndMatch"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::StartRound", 
            "contents": "CMlScriptIngame::EUISound::StartRound"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::EndRound", 
            "contents": "CMlScriptIngame::EUISound::EndRound"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::PhaseChange", 
            "contents": "CMlScriptIngame::EUISound::PhaseChange"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::TieBreakPoint", 
            "contents": "CMlScriptIngame::EUISound::TieBreakPoint"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::TiePoint", 
            "contents": "CMlScriptIngame::EUISound::TiePoint"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::VictoryPoint", 
            "contents": "CMlScriptIngame::EUISound::VictoryPoint"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Capture", 
            "contents": "CMlScriptIngame::EUISound::Capture"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::TimeOut", 
            "contents": "CMlScriptIngame::EUISound::TimeOut"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Notice", 
            "contents": "CMlScriptIngame::EUISound::Notice"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Warning", 
            "contents": "CMlScriptIngame::EUISound::Warning"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::PlayerEliminated", 
            "contents": "CMlScriptIngame::EUISound::PlayerEliminated"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::PlayerHit", 
            "contents": "CMlScriptIngame::EUISound::PlayerHit"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Checkpoint", 
            "contents": "CMlScriptIngame::EUISound::Checkpoint"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Finish", 
            "contents": "CMlScriptIngame::EUISound::Finish"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Record", 
            "contents": "CMlScriptIngame::EUISound::Record"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::ScoreProgress", 
            "contents": "CMlScriptIngame::EUISound::ScoreProgress"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::RankChange", 
            "contents": "CMlScriptIngame::EUISound::RankChange"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Bonus", 
            "contents": "CMlScriptIngame::EUISound::Bonus"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::FirstHit", 
            "contents": "CMlScriptIngame::EUISound::FirstHit"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Combo", 
            "contents": "CMlScriptIngame::EUISound::Combo"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::PlayersRemaining", 
            "contents": "CMlScriptIngame::EUISound::PlayersRemaining"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Custom1", 
            "contents": "CMlScriptIngame::EUISound::Custom1"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Custom2", 
            "contents": "CMlScriptIngame::EUISound::Custom2"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Custom3", 
            "contents": "CMlScriptIngame::EUISound::Custom3"
        }, 
        {
            "trigger": "CMlScriptIngame::EUISound::Custom4", 
            "contents": "CMlScriptIngame::EUISound::Custom4"
        }, 
        {
            "trigger": "CMlScriptIngame::EInGameMenuResult::Resume", 
            "contents": "CMlScriptIngame::EInGameMenuResult::Resume"
        }, 
        {
            "trigger": "CMlScriptIngame::EInGameMenuResult::Quit", 
            "contents": "CMlScriptIngame::EInGameMenuResult::Quit"
        }, 
        {
            "trigger": "CMlScriptIngame::EInGameMenuResult::NormalMenu", 
            "contents": "CMlScriptIngame::EInGameMenuResult::NormalMenu"
        }, 
        {
            "trigger": "CMlScriptIngame::EInGameMenuResult::AdvancedMenu", 
            "contents": "CMlScriptIngame::EInGameMenuResult::AdvancedMenu"
        }, 
        {
            "trigger": "CMlScriptIngame::EInGameMenuResult::ServerSettings", 
            "contents": "CMlScriptIngame::EInGameMenuResult::ServerSettings"
        }, 
        {
            "trigger": "Integer CMlScriptIngame.GameTime", 
            "contents": "GameTime"
        }, 
        {
            "trigger": "CUIConfig CMlScriptIngame.UI", 
            "contents": "UI"
        }, 
        {
            "trigger": "CUIConfig CMlScriptIngame.ClientUI", 
            "contents": "ClientUI"
        }, 
        {
            "trigger": "Boolean CMlScriptIngame.IsSpectatorMode", 
            "contents": "IsSpectatorMode"
        }, 
        {
            "trigger": "Boolean CMlScriptIngame.UseClans", 
            "contents": "UseClans"
        }, 
        {
            "trigger": "Boolean CMlScriptIngame.UseForcedClans", 
            "contents": "UseForcedClans"
        }, 
        {
            "trigger": "CMap CMlScriptIngame.Map", 
            "contents": "Map"
        }, 
        {
            "trigger": "Void CMlScriptIngame.ShowCurChallengeCard()", 
            "contents": "ShowCurChallengeCard()"
        }, 
        {
            "trigger": "Void CMlScriptIngame.ShowModeHelp()", 
            "contents": "ShowModeHelp()"
        }, 
        {
            "trigger": "Void CMlScriptIngame.CopyServerLinkToClipBoard()", 
            "contents": "CopyServerLinkToClipBoard()"
        }, 
        {
            "trigger": "Void CMlScriptIngame.JoinTeam1()", 
            "contents": "JoinTeam1()"
        }, 
        {
            "trigger": "Void CMlScriptIngame.JoinTeam2()", 
            "contents": "JoinTeam2()"
        }, 
        {
            "trigger": "Void CMlScriptIngame.SetSpectateTarget(Text Player)", 
            "contents": "SetSpectateTarget(${1:Text Player})"
        }, 
        {
            "trigger": "Void CMlScriptIngame.ShowProfile(Text Player)", 
            "contents": "ShowProfile(${1:Text Player})"
        }, 
        {
            "trigger": "Void CMlScriptIngame.ShowInGameMenu()", 
            "contents": "ShowInGameMenu()"
        }, 
        {
            "trigger": "Text CMlScriptIngame.CurrentServerLogin", 
            "contents": "CurrentServerLogin"
        }, 
        {
            "trigger": "Text CMlScriptIngame.CurrentServerName", 
            "contents": "CurrentServerName"
        }, 
        {
            "trigger": "Text CMlScriptIngame.CurrentServerJoinLink", 
            "contents": "CurrentServerJoinLink"
        }, 
        {
            "trigger": "Text CMlScriptIngame.CurrentServerModeName", 
            "contents": "CurrentServerModeName"
        }, 
        {
            "trigger": "Void CMlScriptIngame.PlayUiSound(EUISound Sound, Integer SoundVariant, Real Volume)", 
            "contents": "PlayUiSound(${1:EUISound Sound}, ${2:Integer SoundVariant}, ${3:Real Volume})"
        }, 
        {
            "trigger": "Void CMlScriptIngame.CloseInGameMenu(EInGameMenuResult Result)", 
            "contents": "CloseInGameMenu(${1:EInGameMenuResult Result})"
        }, 
        {
            "trigger": "CSmActionEvent", 
            "contents": "CSmActionEvent"
        }, 
        {
            "trigger": "CSmActionEvent::EType::OnHitPlayer", 
            "contents": "CSmActionEvent::EType::OnHitPlayer"
        }, 
        {
            "trigger": "CSmActionEvent::EType::OnProjectileStart", 
            "contents": "CSmActionEvent::EType::OnProjectileStart"
        }, 
        {
            "trigger": "CSmActionEvent::EType::OnProjectileEnd", 
            "contents": "CSmActionEvent::EType::OnProjectileEnd"
        }, 
        {
            "trigger": "CSmActionEvent::EType::OnActiveChange", 
            "contents": "CSmActionEvent::EType::OnActiveChange"
        }, 
        {
            "trigger": "EType CSmActionEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "CSmPlayer CSmActionEvent.Player", 
            "contents": "Player"
        }, 
        {
            "trigger": "Integer CSmActionEvent.Damage", 
            "contents": "Damage"
        }, 
        {
            "trigger": "Ident CSmActionEvent.ProjectileModelId", 
            "contents": "ProjectileModelId"
        }, 
        {
            "trigger": "Integer CSmActionEvent.ContextId", 
            "contents": "ContextId"
        }, 
        {
            "trigger": "Vec3 CSmActionEvent.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Vec3 CSmActionEvent.Direction", 
            "contents": "Direction"
        }, 
        {
            "trigger": "Vec3 CSmActionEvent.Normal", 
            "contents": "Normal"
        }, 
        {
            "trigger": "CMapType", 
            "contents": "CMapType"
        }, 
        {
            "trigger": "CMapType::ValidationStatus::NotValidable", 
            "contents": "CMapType::ValidationStatus::NotValidable"
        }, 
        {
            "trigger": "CMapType::ValidationStatus::Validable", 
            "contents": "CMapType::ValidationStatus::Validable"
        }, 
        {
            "trigger": "CMapType::ValidationStatus::Validated", 
            "contents": "CMapType::ValidationStatus::Validated"
        }, 
        {
            "trigger": "Boolean CMapType.CustomEditAnchorData", 
            "contents": "CustomEditAnchorData"
        }, 
        {
            "trigger": "Void CMapType.ClearMapMetadata()", 
            "contents": "ClearMapMetadata()"
        }, 
        {
            "trigger": "ValidationStatus CMapType.ValidationStatus", 
            "contents": "ValidationStatus"
        }, 
        {
            "trigger": "Text CMapType.ValidabilityRequirementsMessage", 
            "contents": "ValidabilityRequirementsMessage"
        }, 
        {
            "trigger": "Boolean CMapType.ValidationEndRequested", 
            "contents": "ValidationEndRequested"
        }, 
        {
            "trigger": "Void CMapType.StartTestMapWithMode(Text RulesModeName)", 
            "contents": "StartTestMapWithMode(${1:Text RulesModeName})"
        }, 
        {
            "trigger": "Void CMapType.RequestEnterPlayground()", 
            "contents": "RequestEnterPlayground()"
        }, 
        {
            "trigger": "Void CMapType.RequestLeavePlayground()", 
            "contents": "RequestLeavePlayground()"
        }, 
        {
            "trigger": "Boolean CMapType.IsSwitchedToPlayground", 
            "contents": "IsSwitchedToPlayground"
        }, 
        {
            "trigger": "CTmMlPlayer", 
            "contents": "CTmMlPlayer"
        }, 
        {
            "trigger": "CTmMlPlayer::ERaceState::BeforeStart", 
            "contents": "CTmMlPlayer::ERaceState::BeforeStart"
        }, 
        {
            "trigger": "CTmMlPlayer::ERaceState::Running", 
            "contents": "CTmMlPlayer::ERaceState::Running"
        }, 
        {
            "trigger": "CTmMlPlayer::ERaceState::Finished", 
            "contents": "CTmMlPlayer::ERaceState::Finished"
        }, 
        {
            "trigger": "CTmMlPlayer::ERaceState::Eliminated", 
            "contents": "CTmMlPlayer::ERaceState::Eliminated"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.CurrentClan", 
            "contents": "CurrentClan"
        }, 
        {
            "trigger": "ERaceState CTmMlPlayer.RaceState", 
            "contents": "RaceState"
        }, 
        {
            "trigger": "Boolean CTmMlPlayer.IsSpawned", 
            "contents": "IsSpawned"
        }, 
        {
            "trigger": "CTrackManiaScore CTmMlPlayer.Score", 
            "contents": "Score"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.RaceStartTime", 
            "contents": "RaceStartTime"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.LapStartTime", 
            "contents": "LapStartTime"
        }, 
        {
            "trigger": "CTmResult CTmMlPlayer.CurRace", 
            "contents": "CurRace"
        }, 
        {
            "trigger": "CTmResult CTmMlPlayer.CurLap", 
            "contents": "CurLap"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.CurrentNbLaps", 
            "contents": "CurrentNbLaps"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.CurTriggerIndex", 
            "contents": "CurTriggerIndex"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.CurCheckpointRaceTime", 
            "contents": "CurCheckpointRaceTime"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.CurCheckpointLapTime", 
            "contents": "CurCheckpointLapTime"
        }, 
        {
            "trigger": "Real CTmMlPlayer.AccelCoef", 
            "contents": "AccelCoef"
        }, 
        {
            "trigger": "Real CTmMlPlayer.ControlCoef", 
            "contents": "ControlCoef"
        }, 
        {
            "trigger": "Vec3 CTmMlPlayer.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Real CTmMlPlayer.AimYaw", 
            "contents": "AimYaw"
        }, 
        {
            "trigger": "Real CTmMlPlayer.AimPitch", 
            "contents": "AimPitch"
        }, 
        {
            "trigger": "Vec3 CTmMlPlayer.AimDirection", 
            "contents": "AimDirection"
        }, 
        {
            "trigger": "Real CTmMlPlayer.Distance", 
            "contents": "Distance"
        }, 
        {
            "trigger": "Real CTmMlPlayer.Speed", 
            "contents": "Speed"
        }, 
        {
            "trigger": "Integer CTmMlPlayer.DisplaySpeed", 
            "contents": "DisplaySpeed"
        }, 
        {
            "trigger": "CTmScore", 
            "contents": "CTmScore"
        }, 
        {
            "trigger": "Integer CTmScore.TeamNum", 
            "contents": "TeamNum"
        }, 
        {
            "trigger": "Integer CTmScore.Points", 
            "contents": "Points"
        }, 
        {
            "trigger": "CTmResult CTmScore.BestRace", 
            "contents": "BestRace"
        }, 
        {
            "trigger": "CTmResult CTmScore.BestLap", 
            "contents": "BestLap"
        }, 
        {
            "trigger": "Integer CTmScore.PrevRaceDeltaPoints", 
            "contents": "PrevRaceDeltaPoints"
        }, 
        {
            "trigger": "CTmResult CTmScore.PrevRace", 
            "contents": "PrevRace"
        }, 
        {
            "trigger": "CTmResult CTmScore.TempResult", 
            "contents": "TempResult"
        }, 
        {
            "trigger": "Void CTmScore.Clear()", 
            "contents": "Clear()"
        }, 
        {
            "trigger": "CTmPlayer", 
            "contents": "CTmPlayer"
        }, 
        {
            "trigger": "Integer CTmPlayer.CurrentClan", 
            "contents": "CurrentClan"
        }, 
        {
            "trigger": "CTmScore CTmPlayer.Score", 
            "contents": "Score"
        }, 
        {
            "trigger": "Integer CTmPlayer.RaceStartTime", 
            "contents": "RaceStartTime"
        }, 
        {
            "trigger": "Boolean CTmPlayer.IsSpawned", 
            "contents": "IsSpawned"
        }, 
        {
            "trigger": "CTmResult CTmPlayer.CurRace", 
            "contents": "CurRace"
        }, 
        {
            "trigger": "CTmResult CTmPlayer.CurLap", 
            "contents": "CurLap"
        }, 
        {
            "trigger": "Integer CTmPlayer.CurrentNbLaps", 
            "contents": "CurrentNbLaps"
        }, 
        {
            "trigger": "Integer CTmPlayer.CurTriggerIndex", 
            "contents": "CurTriggerIndex"
        }, 
        {
            "trigger": "Vec3 CTmPlayer.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Real CTmPlayer.AimYaw", 
            "contents": "AimYaw"
        }, 
        {
            "trigger": "Real CTmPlayer.AimPitch", 
            "contents": "AimPitch"
        }, 
        {
            "trigger": "Vec3 CTmPlayer.AimDirection", 
            "contents": "AimDirection"
        }, 
        {
            "trigger": "Real CTmPlayer.AccelCoef", 
            "contents": "AccelCoef"
        }, 
        {
            "trigger": "Real CTmPlayer.ControlCoef", 
            "contents": "ControlCoef"
        }, 
        {
            "trigger": "CTmModeEvent", 
            "contents": "CTmModeEvent"
        }, 
        {
            "trigger": "CTmModeEvent::EType::Unknown", 
            "contents": "CTmModeEvent::EType::Unknown"
        }, 
        {
            "trigger": "CTmModeEvent::EType::StartLine", 
            "contents": "CTmModeEvent::EType::StartLine"
        }, 
        {
            "trigger": "CTmModeEvent::EType::WayPoint", 
            "contents": "CTmModeEvent::EType::WayPoint"
        }, 
        {
            "trigger": "CTmModeEvent::EType::GiveUp", 
            "contents": "CTmModeEvent::EType::GiveUp"
        }, 
        {
            "trigger": "CTmModeEvent::EType::Respawn", 
            "contents": "CTmModeEvent::EType::Respawn"
        }, 
        {
            "trigger": "CTmModeEvent::EType::Stunt", 
            "contents": "CTmModeEvent::EType::Stunt"
        }, 
        {
            "trigger": "CTmModeEvent::EType::OnPlayerAdded", 
            "contents": "CTmModeEvent::EType::OnPlayerAdded"
        }, 
        {
            "trigger": "CTmModeEvent::EType::OnPlayerRemoved", 
            "contents": "CTmModeEvent::EType::OnPlayerRemoved"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::None", 
            "contents": "CTmModeEvent::EStuntFigure::None"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::StraightJump", 
            "contents": "CTmModeEvent::EStuntFigure::StraightJump"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Flip", 
            "contents": "CTmModeEvent::EStuntFigure::Flip"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::BackFlip", 
            "contents": "CTmModeEvent::EStuntFigure::BackFlip"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Spin", 
            "contents": "CTmModeEvent::EStuntFigure::Spin"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Aerial", 
            "contents": "CTmModeEvent::EStuntFigure::Aerial"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::AlleyOop", 
            "contents": "CTmModeEvent::EStuntFigure::AlleyOop"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Roll", 
            "contents": "CTmModeEvent::EStuntFigure::Roll"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Corkscrew", 
            "contents": "CTmModeEvent::EStuntFigure::Corkscrew"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::SpinOff", 
            "contents": "CTmModeEvent::EStuntFigure::SpinOff"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Rodeo", 
            "contents": "CTmModeEvent::EStuntFigure::Rodeo"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::FlipFlap", 
            "contents": "CTmModeEvent::EStuntFigure::FlipFlap"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Twister", 
            "contents": "CTmModeEvent::EStuntFigure::Twister"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::FreeStyle", 
            "contents": "CTmModeEvent::EStuntFigure::FreeStyle"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::SpinningMix", 
            "contents": "CTmModeEvent::EStuntFigure::SpinningMix"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::FlippingChaos", 
            "contents": "CTmModeEvent::EStuntFigure::FlippingChaos"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::RollingMadness", 
            "contents": "CTmModeEvent::EStuntFigure::RollingMadness"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckNone", 
            "contents": "CTmModeEvent::EStuntFigure::WreckNone"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckStraightJump", 
            "contents": "CTmModeEvent::EStuntFigure::WreckStraightJump"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckFlip", 
            "contents": "CTmModeEvent::EStuntFigure::WreckFlip"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckBackFlip", 
            "contents": "CTmModeEvent::EStuntFigure::WreckBackFlip"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckSpin", 
            "contents": "CTmModeEvent::EStuntFigure::WreckSpin"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckAerial", 
            "contents": "CTmModeEvent::EStuntFigure::WreckAerial"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckAlleyOop", 
            "contents": "CTmModeEvent::EStuntFigure::WreckAlleyOop"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckRoll", 
            "contents": "CTmModeEvent::EStuntFigure::WreckRoll"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckCorkscrew", 
            "contents": "CTmModeEvent::EStuntFigure::WreckCorkscrew"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckSpinOff", 
            "contents": "CTmModeEvent::EStuntFigure::WreckSpinOff"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckRodeo", 
            "contents": "CTmModeEvent::EStuntFigure::WreckRodeo"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckFlipFlap", 
            "contents": "CTmModeEvent::EStuntFigure::WreckFlipFlap"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckTwister", 
            "contents": "CTmModeEvent::EStuntFigure::WreckTwister"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckFreeStyle", 
            "contents": "CTmModeEvent::EStuntFigure::WreckFreeStyle"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckSpinningMix", 
            "contents": "CTmModeEvent::EStuntFigure::WreckSpinningMix"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckFlippingChaos", 
            "contents": "CTmModeEvent::EStuntFigure::WreckFlippingChaos"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::WreckRollingMadness", 
            "contents": "CTmModeEvent::EStuntFigure::WreckRollingMadness"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::TimePenalty", 
            "contents": "CTmModeEvent::EStuntFigure::TimePenalty"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::RespawnPenalty", 
            "contents": "CTmModeEvent::EStuntFigure::RespawnPenalty"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Grind", 
            "contents": "CTmModeEvent::EStuntFigure::Grind"
        }, 
        {
            "trigger": "CTmModeEvent::EStuntFigure::Reset", 
            "contents": "CTmModeEvent::EStuntFigure::Reset"
        }, 
        {
            "trigger": "EType CTmModeEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "CTmPlayer CTmModeEvent.Player", 
            "contents": "Player"
        }, 
        {
            "trigger": "Integer CTmModeEvent.RaceTime", 
            "contents": "RaceTime"
        }, 
        {
            "trigger": "Integer CTmModeEvent.CheckpointInRace", 
            "contents": "CheckpointInRace"
        }, 
        {
            "trigger": "Integer CTmModeEvent.CheckpointInLap", 
            "contents": "CheckpointInLap"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.IsEndLap", 
            "contents": "IsEndLap"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.IsEndRace", 
            "contents": "IsEndRace"
        }, 
        {
            "trigger": "Integer CTmModeEvent.LapTime", 
            "contents": "LapTime"
        }, 
        {
            "trigger": "Integer CTmModeEvent.StuntsScore", 
            "contents": "StuntsScore"
        }, 
        {
            "trigger": "Integer CTmModeEvent.NbRespawns", 
            "contents": "NbRespawns"
        }, 
        {
            "trigger": "Ident CTmModeEvent.BlockId", 
            "contents": "BlockId"
        }, 
        {
            "trigger": "Real CTmModeEvent.Speed", 
            "contents": "Speed"
        }, 
        {
            "trigger": "Real CTmModeEvent.Distance", 
            "contents": "Distance"
        }, 
        {
            "trigger": "Real CTmModeEvent.Damages", 
            "contents": "Damages"
        }, 
        {
            "trigger": "EStuntFigure CTmModeEvent.StuntFigure", 
            "contents": "StuntFigure"
        }, 
        {
            "trigger": "Integer CTmModeEvent.Angle", 
            "contents": "Angle"
        }, 
        {
            "trigger": "Integer CTmModeEvent.Points", 
            "contents": "Points"
        }, 
        {
            "trigger": "Integer CTmModeEvent.Combo", 
            "contents": "Combo"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.IsStraight", 
            "contents": "IsStraight"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.IsReverse", 
            "contents": "IsReverse"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.IsMasterJump", 
            "contents": "IsMasterJump"
        }, 
        {
            "trigger": "Real CTmModeEvent.Factor", 
            "contents": "Factor"
        }, 
        {
            "trigger": "CUser CTmModeEvent.User", 
            "contents": "User"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.PlayerWasSpawned", 
            "contents": "PlayerWasSpawned"
        }, 
        {
            "trigger": "Boolean CTmModeEvent.PlayerWasInLadderMatch", 
            "contents": "PlayerWasInLadderMatch"
        }, 
        {
            "trigger": "CMlFrame", 
            "contents": "CMlFrame"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Audio", 
            "contents": "CMlFrame::EControlType::Audio"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Entry", 
            "contents": "CMlFrame::EControlType::Entry"
        }, 
        {
            "trigger": "CMlFrame::EControlType::FileEntry", 
            "contents": "CMlFrame::EControlType::FileEntry"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Frame", 
            "contents": "CMlFrame::EControlType::Frame"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Label", 
            "contents": "CMlFrame::EControlType::Label"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Quad", 
            "contents": "CMlFrame::EControlType::Quad"
        }, 
        {
            "trigger": "CMlFrame::EControlType::Video", 
            "contents": "CMlFrame::EControlType::Video"
        }, 
        {
            "trigger": "CMlControl CMlFrame.GetFirstChild(Text ControlId)", 
            "contents": "GetFirstChild(${1:Text ControlId})"
        }, 
        {
            "trigger": "Boolean CMlFrame.ClipWindowActive", 
            "contents": "ClipWindowActive"
        }, 
        {
            "trigger": "Vec2 CMlFrame.ClipWindowRelativePosition", 
            "contents": "ClipWindowRelativePosition"
        }, 
        {
            "trigger": "Vec2 CMlFrame.ClipWindowSize", 
            "contents": "ClipWindowSize"
        }, 
        {
            "trigger": "CXmlDocument", 
            "contents": "CXmlDocument"
        }, 
        {
            "trigger": "Text CXmlDocument.TextContents", 
            "contents": "TextContents"
        }, 
        {
            "trigger": "CXmlNode CXmlDocument.Root", 
            "contents": "Root"
        }, 
        {
            "trigger": "CXmlNode CXmlDocument.GetFirstChild(Text Name)", 
            "contents": "GetFirstChild(${1:Text Name})"
        }, 
        {
            "trigger": "CHttpRequest", 
            "contents": "CHttpRequest"
        }, 
        {
            "trigger": "Text CHttpRequest.Url", 
            "contents": "Url"
        }, 
        {
            "trigger": "Text CHttpRequest.Result", 
            "contents": "Result"
        }, 
        {
            "trigger": "Integer CHttpRequest.StatusCode", 
            "contents": "StatusCode"
        }, 
        {
            "trigger": "Boolean CHttpRequest.IsCompleted", 
            "contents": "IsCompleted"
        }, 
        {
            "trigger": "CAudioSound", 
            "contents": "CAudioSound"
        }, 
        {
            "trigger": "Void CAudioSound.Play()", 
            "contents": "Play()"
        }, 
        {
            "trigger": "Void CAudioSound.Stop()", 
            "contents": "Stop()"
        }, 
        {
            "trigger": "Boolean CAudioSound.IsPlaying", 
            "contents": "IsPlaying"
        }, 
        {
            "trigger": "Boolean CAudioSound.DownloadInProgress", 
            "contents": "DownloadInProgress"
        }, 
        {
            "trigger": "Real CAudioSound.Volume", 
            "contents": "Volume"
        }, 
        {
            "trigger": "Real CAudioSound.VolumedB", 
            "contents": "VolumedB"
        }, 
        {
            "trigger": "Real CAudioSound.Pitch", 
            "contents": "Pitch"
        }, 
        {
            "trigger": "Vec3 CAudioSound.RelativePosition", 
            "contents": "RelativePosition"
        }, 
        {
            "trigger": "Real CAudioSound.PlayCursor", 
            "contents": "PlayCursor"
        }, 
        {
            "trigger": "Real CAudioSound.PlayLength", 
            "contents": "PlayLength"
        }, 
        {
            "trigger": "CMapInfo", 
            "contents": "CMapInfo"
        }, 
        {
            "trigger": "Text CMapInfo.Comments", 
            "contents": "Comments"
        }, 
        {
            "trigger": "Integer CMapInfo.CopperPrice", 
            "contents": "CopperPrice"
        }, 
        {
            "trigger": "Text CMapInfo.CollectionName", 
            "contents": "CollectionName"
        }, 
        {
            "trigger": "Text CMapInfo.AuthorLogin", 
            "contents": "AuthorLogin"
        }, 
        {
            "trigger": "Text CMapInfo.AuthorNickName", 
            "contents": "AuthorNickName"
        }, 
        {
            "trigger": "Text CMapInfo.AuthorZonePath", 
            "contents": "AuthorZonePath"
        }, 
        {
            "trigger": "Text CMapInfo.MapType", 
            "contents": "MapType"
        }, 
        {
            "trigger": "Text CMapInfo.MapStyle", 
            "contents": "MapStyle"
        }, 
        {
            "trigger": "Boolean CMapInfo.Unlocked", 
            "contents": "Unlocked"
        }, 
        {
            "trigger": "Text CMapInfo.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CMapInfo.Path", 
            "contents": "Path"
        }, 
        {
            "trigger": "CCollector", 
            "contents": "CCollector"
        }, 
        {
            "trigger": "Text CCollector.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CCollector.PageName", 
            "contents": "PageName"
        }, 
        {
            "trigger": "CBlockModelVariantGround", 
            "contents": "CBlockModelVariantGround"
        }, 
        {
            "trigger": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::Auto", 
            "contents": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::Auto"
        }, 
        {
            "trigger": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::Force", 
            "contents": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::Force"
        }, 
        {
            "trigger": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::DoNotPlace", 
            "contents": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::DoNotPlace"
        }, 
        {
            "trigger": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::DoNotDestroy", 
            "contents": "CBlockModelVariantGround::EnumAutoTerrainPlaceType::DoNotDestroy"
        }, 
        {
            "trigger": "CBlockModelVariantAir", 
            "contents": "CBlockModelVariantAir"
        }, 
        {
            "trigger": "CBlockUnit", 
            "contents": "CBlockUnit"
        }, 
        {
            "trigger": "Int3 CBlockUnit.Offset", 
            "contents": "Offset"
        }, 
        {
            "trigger": "CBlockUnitModel CBlockUnit.BlockUnitModel", 
            "contents": "BlockUnitModel"
        }, 
        {
            "trigger": "CBlock CBlockUnit.Block", 
            "contents": "Block"
        }, 
        {
            "trigger": "CTeam", 
            "contents": "CTeam"
        }, 
        {
            "trigger": "Text CTeam.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CTeam.ZonePath", 
            "contents": "ZonePath"
        }, 
        {
            "trigger": "Text CTeam.City", 
            "contents": "City"
        }, 
        {
            "trigger": "Text CTeam.EmblemUrl", 
            "contents": "EmblemUrl"
        }, 
        {
            "trigger": "Text CTeam.PresentationManialinkUrl", 
            "contents": "PresentationManialinkUrl"
        }, 
        {
            "trigger": "Text CTeam.ClubLinkUrl", 
            "contents": "ClubLinkUrl"
        }, 
        {
            "trigger": "Vec3 CTeam.ColorPrimary", 
            "contents": "ColorPrimary"
        }, 
        {
            "trigger": "Vec3 CTeam.ColorSecondary", 
            "contents": "ColorSecondary"
        }, 
        {
            "trigger": "Text CTeam.ColorText", 
            "contents": "ColorText"
        }, 
        {
            "trigger": "Text CTeam.ColorizedName", 
            "contents": "ColorizedName"
        }, 
        {
            "trigger": "CUIConfigMgr", 
            "contents": "CUIConfigMgr"
        }, 
        {
            "trigger": "Void CUIConfigMgr.ResetAll()", 
            "contents": "ResetAll()"
        }, 
        {
            "trigger": "CUIConfig CUIConfigMgr.UIAll", 
            "contents": "UIAll"
        }, 
        {
            "trigger": "CUIConfig CUIConfigMgr.GetUI(CPlayer Player)", 
            "contents": "GetUI(${1:CPlayer Player})"
        }, 
        {
            "trigger": "CUIConfig CUIConfigMgr.GetUI(CUser User)", 
            "contents": "GetUI(${1:CUser User})"
        }, 
        {
            "trigger": "CUILayer CUIConfigMgr.UILayerCreate()", 
            "contents": "UILayerCreate()"
        }, 
        {
            "trigger": "Void CUIConfigMgr.UILayerDestroy(CUILayer Layer)", 
            "contents": "UILayerDestroy(${1:CUILayer Layer})"
        }, 
        {
            "trigger": "Void CUIConfigMgr.UILayerDestroyAll()", 
            "contents": "UILayerDestroyAll()"
        }, 
        {
            "trigger": "Integer CUIConfigMgr.UISequenceMaxDuration", 
            "contents": "UISequenceMaxDuration"
        }, 
        {
            "trigger": "CXmlRpc", 
            "contents": "CXmlRpc"
        }, 
        {
            "trigger": "Void CXmlRpc.SendCallback(Text Param1, Text Param2)", 
            "contents": "SendCallback(${1:Text Param1}, ${2:Text Param2})"
        }, 
        {
            "trigger": "Void CXmlRpc.SendCallbackArray(Text Type, Text[] Data)", 
            "contents": "SendCallbackArray(${1:Text Type}, ${2:Text[] Data})"
        }, 
        {
            "trigger": "Void CXmlRpc.SendCallback_BeginRound()", 
            "contents": "SendCallback_BeginRound()"
        }, 
        {
            "trigger": "Void CXmlRpc.SendCallback_EndRound()", 
            "contents": "SendCallback_EndRound()"
        }, 
        {
            "trigger": "CPlayer", 
            "contents": "CPlayer"
        }, 
        {
            "trigger": "CUser CPlayer.User", 
            "contents": "User"
        }, 
        {
            "trigger": "Text CPlayer.Login", 
            "contents": "Login"
        }, 
        {
            "trigger": "Text CPlayer.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Integer CPlayer.RequestedClan", 
            "contents": "RequestedClan"
        }, 
        {
            "trigger": "Boolean CPlayer.RequestsSpectate", 
            "contents": "RequestsSpectate"
        }, 
        {
            "trigger": "CSmPlayerDriver", 
            "contents": "CSmPlayerDriver"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Static", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Static"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Turret", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Turret"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Scripted", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Scripted"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::IA", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::IA"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Patrol", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Patrol"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Escape", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Escape"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverBehaviour::Saunter", 
            "contents": "CSmPlayerDriver::ESmDriverBehaviour::Saunter"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverPatrolMode::OneTrip", 
            "contents": "CSmPlayerDriver::ESmDriverPatrolMode::OneTrip"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverPatrolMode::BackAndForth", 
            "contents": "CSmPlayerDriver::ESmDriverPatrolMode::BackAndForth"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmDriverPatrolMode::Loop", 
            "contents": "CSmPlayerDriver::ESmDriverPatrolMode::Loop"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::All", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::All"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::AllPlayers", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::AllPlayers"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::AllBots", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::AllBots"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::AllOpposite", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::AllOpposite"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::OppositePlayers", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::OppositePlayers"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::OppositeBots", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::OppositeBots"
        }, 
        {
            "trigger": "CSmPlayerDriver::ESmAttackFilter::Nobody", 
            "contents": "CSmPlayerDriver::ESmAttackFilter::Nobody"
        }, 
        {
            "trigger": "ESmDriverBehaviour CSmPlayerDriver.Behaviour", 
            "contents": "Behaviour"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.AggroRadius", 
            "contents": "AggroRadius"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.DisengageDistance", 
            "contents": "DisengageDistance"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.PathSpeedCoef", 
            "contents": "PathSpeedCoef"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Accuracy", 
            "contents": "Accuracy"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.ReactionTime", 
            "contents": "ReactionTime"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.ShootPeriodMin", 
            "contents": "ShootPeriodMin"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.ShootPeriodMax", 
            "contents": "ShootPeriodMax"
        }, 
        {
            "trigger": "Boolean CSmPlayerDriver.RocketAnticipation", 
            "contents": "RocketAnticipation"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Fov", 
            "contents": "Fov"
        }, 
        {
            "trigger": "ESmAttackFilter CSmPlayerDriver.AttackFilter", 
            "contents": "AttackFilter"
        }, 
        {
            "trigger": "CSmPlayer CSmPlayerDriver.Target", 
            "contents": "Target"
        }, 
        {
            "trigger": "Boolean CSmPlayerDriver.IsStuck", 
            "contents": "IsStuck"
        }, 
        {
            "trigger": "Boolean CSmPlayerDriver.IsFlying", 
            "contents": "IsFlying"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.PathOffset", 
            "contents": "PathOffset"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Agressivity", 
            "contents": "Agressivity"
        }, 
        {
            "trigger": "Boolean CSmPlayerDriver.UseOldShootingSystem", 
            "contents": "UseOldShootingSystem"
        }, 
        {
            "trigger": "ESmDriverPatrolMode CSmPlayerDriver.Patrol_Mode", 
            "contents": "Patrol_Mode"
        }, 
        {
            "trigger": "Vec3 CSmPlayerDriver.Escape_AnchorPoint", 
            "contents": "Escape_AnchorPoint"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Escape_DistanceSafe", 
            "contents": "Escape_DistanceSafe"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Escape_DistanceMinEscape", 
            "contents": "Escape_DistanceMinEscape"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Escape_DistanceMaxEscape", 
            "contents": "Escape_DistanceMaxEscape"
        }, 
        {
            "trigger": "Vec3 CSmPlayerDriver.Saunter_AnchorPoint", 
            "contents": "Saunter_AnchorPoint"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.Saunter_BaseChillingTime", 
            "contents": "Saunter_BaseChillingTime"
        }, 
        {
            "trigger": "Integer CSmPlayerDriver.Saunter_ChillingTimeDelta", 
            "contents": "Saunter_ChillingTimeDelta"
        }, 
        {
            "trigger": "Real CSmPlayerDriver.Saunter_Radius", 
            "contents": "Saunter_Radius"
        }, 
        {
            "trigger": "Boolean CSmPlayerDriver.Scripted_ForceAimInMoveDir", 
            "contents": "Scripted_ForceAimInMoveDir"
        }, 
        {
            "trigger": "CSmPlayer CSmPlayerDriver.ForcedTarget", 
            "contents": "ForcedTarget"
        }, 
        {
            "trigger": "CSmBlockPole", 
            "contents": "CSmBlockPole"
        }, 
        {
            "trigger": "Boolean CSmBlockPole.Captured", 
            "contents": "Captured"
        }, 
        {
            "trigger": "CSmSector CSmBlockPole.Sector", 
            "contents": "Sector"
        }, 
        {
            "trigger": "CSmGauge CSmBlockPole.Gauge", 
            "contents": "Gauge"
        }, 
        {
            "trigger": "CSmMapGate", 
            "contents": "CSmMapGate"
        }, 
        {
            "trigger": "Integer CSmMapGate.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Boolean CSmMapGate.Automatic", 
            "contents": "Automatic"
        }, 
        {
            "trigger": "Boolean CSmMapGate.ManualClosed", 
            "contents": "ManualClosed"
        }, 
        {
            "trigger": "Boolean CSmMapGate.AutoClosed", 
            "contents": "AutoClosed"
        }, 
        {
            "trigger": "Boolean CSmMapGate.AutoIsActive", 
            "contents": "AutoIsActive"
        }, 
        {
            "trigger": "Integer CSmMapGate.AutoCloseDelay", 
            "contents": "AutoCloseDelay"
        }, 
        {
            "trigger": "Integer CSmMapGate.AutoOpenSpeed", 
            "contents": "AutoOpenSpeed"
        }, 
        {
            "trigger": "CSmMapGauge", 
            "contents": "CSmMapGauge"
        }, 
        {
            "trigger": "Integer CSmMapGauge.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Real CSmMapGauge.ValueReal", 
            "contents": "ValueReal"
        }, 
        {
            "trigger": "Integer CSmMapGauge.Value", 
            "contents": "Value"
        }, 
        {
            "trigger": "Integer CSmMapGauge.Max", 
            "contents": "Max"
        }, 
        {
            "trigger": "Integer CSmMapGauge.Speed", 
            "contents": "Speed"
        }, 
        {
            "trigger": "Boolean CSmMapGauge.Captured", 
            "contents": "Captured"
        }, 
        {
            "trigger": "CSmMapSector", 
            "contents": "CSmMapSector"
        }, 
        {
            "trigger": "CSmMapPlayerSpawn", 
            "contents": "CSmMapPlayerSpawn"
        }, 
        {
            "trigger": "CSmMapBotPath", 
            "contents": "CSmMapBotPath"
        }, 
        {
            "trigger": "Integer CSmMapBotPath.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Boolean CSmMapBotPath.IsFlying", 
            "contents": "IsFlying"
        }, 
        {
            "trigger": "CSmMapObjectAnchor", 
            "contents": "CSmMapObjectAnchor"
        }, 
        {
            "trigger": "Text CSmMapObjectAnchor.ItemName", 
            "contents": "ItemName"
        }, 
        {
            "trigger": "Ident CSmMapObjectAnchor.ItemModelId", 
            "contents": "ItemModelId"
        }, 
        {
            "trigger": "CScore", 
            "contents": "CScore"
        }, 
        {
            "trigger": "CUser CScore.User", 
            "contents": "User"
        }, 
        {
            "trigger": "Boolean CScore.IsRegisteredForLadderMatch", 
            "contents": "IsRegisteredForLadderMatch"
        }, 
        {
            "trigger": "Real CScore.LadderScore", 
            "contents": "LadderScore"
        }, 
        {
            "trigger": "Integer CScore.LadderRankSortValue", 
            "contents": "LadderRankSortValue"
        }, 
        {
            "trigger": "Real CScore.LadderMatchScoreValue", 
            "contents": "LadderMatchScoreValue"
        }, 
        {
            "trigger": "Integer CScore.LadderClan", 
            "contents": "LadderClan"
        }, 
        {
            "trigger": "CUIConfig", 
            "contents": "CUIConfig"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::None", 
            "contents": "CUIConfig::EUISequence::None"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::Playing", 
            "contents": "CUIConfig::EUISequence::Playing"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::Intro", 
            "contents": "CUIConfig::EUISequence::Intro"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::Outro", 
            "contents": "CUIConfig::EUISequence::Outro"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::Podium", 
            "contents": "CUIConfig::EUISequence::Podium"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::CustomMTClip", 
            "contents": "CUIConfig::EUISequence::CustomMTClip"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::EndRound", 
            "contents": "CUIConfig::EUISequence::EndRound"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::PlayersPresentation", 
            "contents": "CUIConfig::EUISequence::PlayersPresentation"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::UIInteraction", 
            "contents": "CUIConfig::EUISequence::UIInteraction"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::RollingBackgroundIntro", 
            "contents": "CUIConfig::EUISequence::RollingBackgroundIntro"
        }, 
        {
            "trigger": "CUIConfig::EUISequence::CustomMTClip_WithUIInteraction", 
            "contents": "CUIConfig::EUISequence::CustomMTClip_WithUIInteraction"
        }, 
        {
            "trigger": "CUIConfig::EUIStatus::None", 
            "contents": "CUIConfig::EUIStatus::None"
        }, 
        {
            "trigger": "CUIConfig::EUIStatus::Normal", 
            "contents": "CUIConfig::EUIStatus::Normal"
        }, 
        {
            "trigger": "CUIConfig::EUIStatus::Warning", 
            "contents": "CUIConfig::EUIStatus::Warning"
        }, 
        {
            "trigger": "CUIConfig::EUIStatus::Error", 
            "contents": "CUIConfig::EUIStatus::Error"
        }, 
        {
            "trigger": "CUIConfig::EUIStatus::Official", 
            "contents": "CUIConfig::EUIStatus::Official"
        }, 
        {
            "trigger": "CUIConfig::EVisibility::None", 
            "contents": "CUIConfig::EVisibility::None"
        }, 
        {
            "trigger": "CUIConfig::EVisibility::Normal", 
            "contents": "CUIConfig::EVisibility::Normal"
        }, 
        {
            "trigger": "CUIConfig::EVisibility::Manual", 
            "contents": "CUIConfig::EVisibility::Manual"
        }, 
        {
            "trigger": "CUIConfig::EVisibility::ForcedHidden", 
            "contents": "CUIConfig::EVisibility::ForcedHidden"
        }, 
        {
            "trigger": "CUIConfig::EVisibility::ForcedVisible", 
            "contents": "CUIConfig::EVisibility::ForcedVisible"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::None", 
            "contents": "CUIConfig::ELabelsVisibility::None"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::Never", 
            "contents": "CUIConfig::ELabelsVisibility::Never"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::Always", 
            "contents": "CUIConfig::ELabelsVisibility::Always"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::WhenInFrustum", 
            "contents": "CUIConfig::ELabelsVisibility::WhenInFrustum"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::WhenVisible", 
            "contents": "CUIConfig::ELabelsVisibility::WhenVisible"
        }, 
        {
            "trigger": "CUIConfig::ELabelsVisibility::WhenInMiddleOfScreen", 
            "contents": "CUIConfig::ELabelsVisibility::WhenInMiddleOfScreen"
        }, 
        {
            "trigger": "CUIConfig::EAvatarVariant::Default", 
            "contents": "CUIConfig::EAvatarVariant::Default"
        }, 
        {
            "trigger": "CUIConfig::EAvatarVariant::Sad", 
            "contents": "CUIConfig::EAvatarVariant::Sad"
        }, 
        {
            "trigger": "CUIConfig::EAvatarVariant::Happy", 
            "contents": "CUIConfig::EAvatarVariant::Happy"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Default", 
            "contents": "CUIConfig::EUISound::Default"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Silence", 
            "contents": "CUIConfig::EUISound::Silence"
        }, 
        {
            "trigger": "CUIConfig::EUISound::StartMatch", 
            "contents": "CUIConfig::EUISound::StartMatch"
        }, 
        {
            "trigger": "CUIConfig::EUISound::EndMatch", 
            "contents": "CUIConfig::EUISound::EndMatch"
        }, 
        {
            "trigger": "CUIConfig::EUISound::StartRound", 
            "contents": "CUIConfig::EUISound::StartRound"
        }, 
        {
            "trigger": "CUIConfig::EUISound::EndRound", 
            "contents": "CUIConfig::EUISound::EndRound"
        }, 
        {
            "trigger": "CUIConfig::EUISound::PhaseChange", 
            "contents": "CUIConfig::EUISound::PhaseChange"
        }, 
        {
            "trigger": "CUIConfig::EUISound::TieBreakPoint", 
            "contents": "CUIConfig::EUISound::TieBreakPoint"
        }, 
        {
            "trigger": "CUIConfig::EUISound::TiePoint", 
            "contents": "CUIConfig::EUISound::TiePoint"
        }, 
        {
            "trigger": "CUIConfig::EUISound::VictoryPoint", 
            "contents": "CUIConfig::EUISound::VictoryPoint"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Capture", 
            "contents": "CUIConfig::EUISound::Capture"
        }, 
        {
            "trigger": "CUIConfig::EUISound::TimeOut", 
            "contents": "CUIConfig::EUISound::TimeOut"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Notice", 
            "contents": "CUIConfig::EUISound::Notice"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Warning", 
            "contents": "CUIConfig::EUISound::Warning"
        }, 
        {
            "trigger": "CUIConfig::EUISound::PlayerEliminated", 
            "contents": "CUIConfig::EUISound::PlayerEliminated"
        }, 
        {
            "trigger": "CUIConfig::EUISound::PlayerHit", 
            "contents": "CUIConfig::EUISound::PlayerHit"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Checkpoint", 
            "contents": "CUIConfig::EUISound::Checkpoint"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Finish", 
            "contents": "CUIConfig::EUISound::Finish"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Record", 
            "contents": "CUIConfig::EUISound::Record"
        }, 
        {
            "trigger": "CUIConfig::EUISound::ScoreProgress", 
            "contents": "CUIConfig::EUISound::ScoreProgress"
        }, 
        {
            "trigger": "CUIConfig::EUISound::RankChange", 
            "contents": "CUIConfig::EUISound::RankChange"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Bonus", 
            "contents": "CUIConfig::EUISound::Bonus"
        }, 
        {
            "trigger": "CUIConfig::EUISound::FirstHit", 
            "contents": "CUIConfig::EUISound::FirstHit"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Combo", 
            "contents": "CUIConfig::EUISound::Combo"
        }, 
        {
            "trigger": "CUIConfig::EUISound::PlayersRemaining", 
            "contents": "CUIConfig::EUISound::PlayersRemaining"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Custom1", 
            "contents": "CUIConfig::EUISound::Custom1"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Custom2", 
            "contents": "CUIConfig::EUISound::Custom2"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Custom3", 
            "contents": "CUIConfig::EUISound::Custom3"
        }, 
        {
            "trigger": "CUIConfig::EUISound::Custom4", 
            "contents": "CUIConfig::EUISound::Custom4"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::Default", 
            "contents": "CUIConfig::ENoticeLevel::Default"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::PlayerInfo", 
            "contents": "CUIConfig::ENoticeLevel::PlayerInfo"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::PlayerWarning", 
            "contents": "CUIConfig::ENoticeLevel::PlayerWarning"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::MapInfo", 
            "contents": "CUIConfig::ENoticeLevel::MapInfo"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::MapWarning", 
            "contents": "CUIConfig::ENoticeLevel::MapWarning"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::MatchInfo", 
            "contents": "CUIConfig::ENoticeLevel::MatchInfo"
        }, 
        {
            "trigger": "CUIConfig::ENoticeLevel::MatchWarning", 
            "contents": "CUIConfig::ENoticeLevel::MatchWarning"
        }, 
        {
            "trigger": "CUIConfig::EObserverMode::Default", 
            "contents": "CUIConfig::EObserverMode::Default"
        }, 
        {
            "trigger": "CUIConfig::EObserverMode::Forced", 
            "contents": "CUIConfig::EObserverMode::Forced"
        }, 
        {
            "trigger": "CUIConfig::EObserverMode::Forbidden", 
            "contents": "CUIConfig::EObserverMode::Forbidden"
        }, 
        {
            "trigger": "CUIConfig::EObserverMode::Manual", 
            "contents": "CUIConfig::EObserverMode::Manual"
        }, 
        {
            "trigger": "EUISequence CUIConfig.UISequence", 
            "contents": "UISequence"
        }, 
        {
            "trigger": "Boolean CUIConfig.UISequenceIsCompleted", 
            "contents": "UISequenceIsCompleted"
        }, 
        {
            "trigger": "Text CUIConfig.UISequence_CustomMTClip", 
            "contents": "UISequence_CustomMTClip"
        }, 
        {
            "trigger": "Integer CUIConfig.UISequence_CustomMTRefTime", 
            "contents": "UISequence_CustomMTRefTime"
        }, 
        {
            "trigger": "Boolean CUIConfig.UISequence_CanSkipIntroMT", 
            "contents": "UISequence_CanSkipIntroMT"
        }, 
        {
            "trigger": "Text CUIConfig.UISequence_PodiumPlayersWin", 
            "contents": "UISequence_PodiumPlayersWin"
        }, 
        {
            "trigger": "Text CUIConfig.UISequence_PodiumPlayersLose", 
            "contents": "UISequence_PodiumPlayersLose"
        }, 
        {
            "trigger": "Text CUIConfig.ManialinkPage", 
            "contents": "ManialinkPage"
        }, 
        {
            "trigger": "Text CUIConfig.BigMessage", 
            "contents": "BigMessage"
        }, 
        {
            "trigger": "Text CUIConfig.BigMessageAvatarLogin", 
            "contents": "BigMessageAvatarLogin"
        }, 
        {
            "trigger": "EAvatarVariant CUIConfig.BigMessageAvatarVariant", 
            "contents": "BigMessageAvatarVariant"
        }, 
        {
            "trigger": "EUISound CUIConfig.BigMessageSound", 
            "contents": "BigMessageSound"
        }, 
        {
            "trigger": "Integer CUIConfig.BigMessageSoundVariant", 
            "contents": "BigMessageSoundVariant"
        }, 
        {
            "trigger": "Text CUIConfig.StatusMessage", 
            "contents": "StatusMessage"
        }, 
        {
            "trigger": "Text CUIConfig.GaugeMessage", 
            "contents": "GaugeMessage"
        }, 
        {
            "trigger": "Real CUIConfig.GaugeRatio", 
            "contents": "GaugeRatio"
        }, 
        {
            "trigger": "Integer CUIConfig.GaugeClan", 
            "contents": "GaugeClan"
        }, 
        {
            "trigger": "Text CUIConfig.MarkersXML", 
            "contents": "MarkersXML"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideNotices", 
            "contents": "OverlayHideNotices"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideMapInfo", 
            "contents": "OverlayHideMapInfo"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideOpponentsInfo", 
            "contents": "OverlayHideOpponentsInfo"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideChat", 
            "contents": "OverlayHideChat"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideCheckPointList", 
            "contents": "OverlayHideCheckPointList"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideRoundScores", 
            "contents": "OverlayHideRoundScores"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideCountdown", 
            "contents": "OverlayHideCountdown"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideCrosshair", 
            "contents": "OverlayHideCrosshair"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideGauges", 
            "contents": "OverlayHideGauges"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideConsumables", 
            "contents": "OverlayHideConsumables"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHide321Go", 
            "contents": "OverlayHide321Go"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideBackground", 
            "contents": "OverlayHideBackground"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideChrono", 
            "contents": "OverlayHideChrono"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideSpeedAndDist", 
            "contents": "OverlayHideSpeedAndDist"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHidePersonnalBestAndRank", 
            "contents": "OverlayHidePersonnalBestAndRank"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHidePosition", 
            "contents": "OverlayHidePosition"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideCheckPointTime", 
            "contents": "OverlayHideCheckPointTime"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideEndMapLadderRecap", 
            "contents": "OverlayHideEndMapLadderRecap"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideMultilapInfos", 
            "contents": "OverlayHideMultilapInfos"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideSpectatorControllers", 
            "contents": "OverlayHideSpectatorControllers"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayHideSpectatorInfos", 
            "contents": "OverlayHideSpectatorInfos"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayChatHideAvatar", 
            "contents": "OverlayChatHideAvatar"
        }, 
        {
            "trigger": "Integer CUIConfig.OverlayChatLineCount", 
            "contents": "OverlayChatLineCount"
        }, 
        {
            "trigger": "Vec2 CUIConfig.OverlayChatOffset", 
            "contents": "OverlayChatOffset"
        }, 
        {
            "trigger": "Vec2 CUIConfig.CountdownCoord", 
            "contents": "CountdownCoord"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HidePlayerInfo", 
            "contents": "NoticesFilter_HidePlayerInfo"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HidePlayerWarning", 
            "contents": "NoticesFilter_HidePlayerWarning"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HidePlayerInfoIfNotMe", 
            "contents": "NoticesFilter_HidePlayerInfoIfNotMe"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HidePlayerWarningIfNotMe", 
            "contents": "NoticesFilter_HidePlayerWarningIfNotMe"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HideMapInfo", 
            "contents": "NoticesFilter_HideMapInfo"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HideMapWarning", 
            "contents": "NoticesFilter_HideMapWarning"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HideMatchInfo", 
            "contents": "NoticesFilter_HideMatchInfo"
        }, 
        {
            "trigger": "Boolean CUIConfig.NoticesFilter_HideMatchWarning", 
            "contents": "NoticesFilter_HideMatchWarning"
        }, 
        {
            "trigger": "ENoticeLevel CUIConfig.NoticesFilter_LevelToShowAsBigMessage", 
            "contents": "NoticesFilter_LevelToShowAsBigMessage"
        }, 
        {
            "trigger": "Text CUIConfig.ScoreTable", 
            "contents": "ScoreTable"
        }, 
        {
            "trigger": "EVisibility CUIConfig.ScoreTableVisibility", 
            "contents": "ScoreTableVisibility"
        }, 
        {
            "trigger": "Text CUIConfig.SmallScoreTable", 
            "contents": "SmallScoreTable"
        }, 
        {
            "trigger": "EVisibility CUIConfig.SmallScoreTableVisibility", 
            "contents": "SmallScoreTableVisibility"
        }, 
        {
            "trigger": "Boolean CUIConfig.ScoreTableOnlyManialink", 
            "contents": "ScoreTableOnlyManialink"
        }, 
        {
            "trigger": "Boolean CUIConfig.AltMenuNoDefaultScores", 
            "contents": "AltMenuNoDefaultScores"
        }, 
        {
            "trigger": "Boolean CUIConfig.AltMenuNoCustomScores", 
            "contents": "AltMenuNoCustomScores"
        }, 
        {
            "trigger": "Boolean CUIConfig.OverlayScoreSummary", 
            "contents": "OverlayScoreSummary"
        }, 
        {
            "trigger": "Ident CUIConfig.ScoreSummary_Player1", 
            "contents": "ScoreSummary_Player1"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_Points1", 
            "contents": "ScoreSummary_Points1"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_RoundPoints1", 
            "contents": "ScoreSummary_RoundPoints1"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_MatchPoints1", 
            "contents": "ScoreSummary_MatchPoints1"
        }, 
        {
            "trigger": "Real CUIConfig.ScoreSummary_Gauge1", 
            "contents": "ScoreSummary_Gauge1"
        }, 
        {
            "trigger": "Ident CUIConfig.ScoreSummary_Player2", 
            "contents": "ScoreSummary_Player2"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_Points2", 
            "contents": "ScoreSummary_Points2"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_RoundPoints2", 
            "contents": "ScoreSummary_RoundPoints2"
        }, 
        {
            "trigger": "Integer CUIConfig.ScoreSummary_MatchPoints2", 
            "contents": "ScoreSummary_MatchPoints2"
        }, 
        {
            "trigger": "Real CUIConfig.ScoreSummary_Gauge2", 
            "contents": "ScoreSummary_Gauge2"
        }, 
        {
            "trigger": "Boolean CUIConfig.ScreenIn3dHideScoreSummary", 
            "contents": "ScreenIn3dHideScoreSummary"
        }, 
        {
            "trigger": "Boolean CUIConfig.ScreenIn3dHideVersus", 
            "contents": "ScreenIn3dHideVersus"
        }, 
        {
            "trigger": "Integer CUIConfig.CountdownEndTime", 
            "contents": "CountdownEndTime"
        }, 
        {
            "trigger": "EUIStatus CUIConfig.UIStatus", 
            "contents": "UIStatus"
        }, 
        {
            "trigger": "ELabelsVisibility CUIConfig.AlliesLabelsVisibility", 
            "contents": "AlliesLabelsVisibility"
        }, 
        {
            "trigger": "EVisibility CUIConfig.AlliesLabelsShowGauges", 
            "contents": "AlliesLabelsShowGauges"
        }, 
        {
            "trigger": "EVisibility CUIConfig.AlliesLabelsShowNames", 
            "contents": "AlliesLabelsShowNames"
        }, 
        {
            "trigger": "Integer CUIConfig.AlliesLabelsMaxCount", 
            "contents": "AlliesLabelsMaxCount"
        }, 
        {
            "trigger": "ELabelsVisibility CUIConfig.TeamLabelsVisibility", 
            "contents": "TeamLabelsVisibility"
        }, 
        {
            "trigger": "EVisibility CUIConfig.TeamLabelsShowGauges", 
            "contents": "TeamLabelsShowGauges"
        }, 
        {
            "trigger": "EVisibility CUIConfig.TeamLabelsShowNames", 
            "contents": "TeamLabelsShowNames"
        }, 
        {
            "trigger": "ELabelsVisibility CUIConfig.OpposingTeamLabelsVisibility", 
            "contents": "OpposingTeamLabelsVisibility"
        }, 
        {
            "trigger": "EVisibility CUIConfig.OpposingTeamLabelsShowGauges", 
            "contents": "OpposingTeamLabelsShowGauges"
        }, 
        {
            "trigger": "EVisibility CUIConfig.OpposingTeamLabelsShowNames", 
            "contents": "OpposingTeamLabelsShowNames"
        }, 
        {
            "trigger": "Boolean CUIConfig.ForceSpectator", 
            "contents": "ForceSpectator"
        }, 
        {
            "trigger": "Integer CUIConfig.SpectatorForceCameraType", 
            "contents": "SpectatorForceCameraType"
        }, 
        {
            "trigger": "Ident CUIConfig.SpectatorAutoTarget", 
            "contents": "SpectatorAutoTarget"
        }, 
        {
            "trigger": "Ident CUIConfig.SpectatorForcedTarget", 
            "contents": "SpectatorForcedTarget"
        }, 
        {
            "trigger": "Integer CUIConfig.SpectatorForcedClan", 
            "contents": "SpectatorForcedClan"
        }, 
        {
            "trigger": "Real CUIConfig.SpectatorCamAutoLatitude", 
            "contents": "SpectatorCamAutoLatitude"
        }, 
        {
            "trigger": "Real CUIConfig.SpectatorCamAutoLongitude", 
            "contents": "SpectatorCamAutoLongitude"
        }, 
        {
            "trigger": "Real CUIConfig.SpectatorCamAutoRadius", 
            "contents": "SpectatorCamAutoRadius"
        }, 
        {
            "trigger": "EObserverMode CUIConfig.SpectatorObserverMode", 
            "contents": "SpectatorObserverMode"
        }, 
        {
            "trigger": "Void CUIConfig.SendChat(Text Text)", 
            "contents": "SendChat(${1:Text Text})"
        }, 
        {
            "trigger": "Void CUIConfig.SendNotice(Text Text, ENoticeLevel Level, CUser Avatar, EAvatarVariant AvatarVariant, EUISound Sound, Integer SoundVariant)", 
            "contents": "SendNotice(${1:Text Text}, ${2:ENoticeLevel Level}, ${3:CUser Avatar}, ${4:EAvatarVariant AvatarVariant}, ${5:EUISound Sound}, ${6:Integer SoundVariant})"
        }, 
        {
            "trigger": "Text CUIConfig.GetLayerManialinkAction(CUILayer Layer)", 
            "contents": "GetLayerManialinkAction(${1:CUILayer Layer})"
        }, 
        {
            "trigger": "Void CUIConfig.ClearLayerManialinkAction(CUILayer Layer)", 
            "contents": "ClearLayerManialinkAction(${1:CUILayer Layer})"
        }, 
        {
            "trigger": "CTrackManiaScore", 
            "contents": "CTrackManiaScore"
        }, 
        {
            "trigger": "CTmResult", 
            "contents": "CTmResult"
        }, 
        {
            "trigger": "CTmResult::ETmRaceResultCriteria::Time", 
            "contents": "CTmResult::ETmRaceResultCriteria::Time"
        }, 
        {
            "trigger": "CTmResult::ETmRaceResultCriteria::Stunts", 
            "contents": "CTmResult::ETmRaceResultCriteria::Stunts"
        }, 
        {
            "trigger": "CTmResult::ETmRaceResultCriteria::NbRespawns", 
            "contents": "CTmResult::ETmRaceResultCriteria::NbRespawns"
        }, 
        {
            "trigger": "CTmResult::ETmRaceResultCriteria::CheckpointsProgress", 
            "contents": "CTmResult::ETmRaceResultCriteria::CheckpointsProgress"
        }, 
        {
            "trigger": "CTmResult::ETmRaceResultCriteria::None", 
            "contents": "CTmResult::ETmRaceResultCriteria::None"
        }, 
        {
            "trigger": "Integer CTmResult.Time", 
            "contents": "Time"
        }, 
        {
            "trigger": "Integer CTmResult.StuntsScore", 
            "contents": "StuntsScore"
        }, 
        {
            "trigger": "Integer CTmResult.NbRespawns", 
            "contents": "NbRespawns"
        }, 
        {
            "trigger": "Integer CTmResult.Compare(CTmResult Other, ETmRaceResultCriteria Criteria)", 
            "contents": "Compare(${1:CTmResult Other}, ${2:ETmRaceResultCriteria Criteria})"
        }, 
        {
            "trigger": "CXmlNode", 
            "contents": "CXmlNode"
        }, 
        {
            "trigger": "Text CXmlNode.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Text CXmlNode.TextContents", 
            "contents": "TextContents"
        }, 
        {
            "trigger": "Text CXmlNode.TextRawContents", 
            "contents": "TextRawContents"
        }, 
        {
            "trigger": "Text CXmlNode.TextRecursiveContents", 
            "contents": "TextRecursiveContents"
        }, 
        {
            "trigger": "Text CXmlNode.GetAttributeText(Text Name, Text DefaultValue)", 
            "contents": "GetAttributeText(${1:Text Name}, ${2:Text DefaultValue})"
        }, 
        {
            "trigger": "Integer CXmlNode.GetAttributeInteger(Text Name, Integer DefaultValue)", 
            "contents": "GetAttributeInteger(${1:Text Name}, ${2:Integer DefaultValue})"
        }, 
        {
            "trigger": "Real CXmlNode.GetAttributeReal(Text Name, Real DefaultValue)", 
            "contents": "GetAttributeReal(${1:Text Name}, ${2:Real DefaultValue})"
        }, 
        {
            "trigger": "Boolean CXmlNode.GetAttributeBoolean(Text Name, Boolean DefaultValue)", 
            "contents": "GetAttributeBoolean(${1:Text Name}, ${2:Boolean DefaultValue})"
        }, 
        {
            "trigger": "CXmlNode CXmlNode.GetFirstChild(Text Name)", 
            "contents": "GetFirstChild(${1:Text Name})"
        }, 
        {
            "trigger": "CBlockModelVariant", 
            "contents": "CBlockModelVariant"
        }, 
        {
            "trigger": "Text CBlockModelVariant.Name", 
            "contents": "Name"
        }, 
        {
            "trigger": "Boolean CBlockModelVariant.IsAllUnderground", 
            "contents": "IsAllUnderground"
        }, 
        {
            "trigger": "Boolean CBlockModelVariant.IsPartUnderground", 
            "contents": "IsPartUnderground"
        }, 
        {
            "trigger": "Int3 CBlockModelVariant.Size", 
            "contents": "Size"
        }, 
        {
            "trigger": "Int3 CBlockModelVariant.OffsetBoundingBoxMin", 
            "contents": "OffsetBoundingBoxMin"
        }, 
        {
            "trigger": "Int3 CBlockModelVariant.OffsetBoundingBoxMax", 
            "contents": "OffsetBoundingBoxMax"
        }, 
        {
            "trigger": "CBlockUnitModel", 
            "contents": "CBlockUnitModel"
        }, 
        {
            "trigger": "CBlockUnitModel::CardinalDirEnum::North", 
            "contents": "CBlockUnitModel::CardinalDirEnum::North"
        }, 
        {
            "trigger": "CBlockUnitModel::CardinalDirEnum::East", 
            "contents": "CBlockUnitModel::CardinalDirEnum::East"
        }, 
        {
            "trigger": "CBlockUnitModel::CardinalDirEnum::South", 
            "contents": "CBlockUnitModel::CardinalDirEnum::South"
        }, 
        {
            "trigger": "CBlockUnitModel::CardinalDirEnum::West", 
            "contents": "CBlockUnitModel::CardinalDirEnum::West"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::SameDir", 
            "contents": "CBlockUnitModel::MultiDirEnum::SameDir"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::SymmetricalDirs", 
            "contents": "CBlockUnitModel::MultiDirEnum::SymmetricalDirs"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::AllDir", 
            "contents": "CBlockUnitModel::MultiDirEnum::AllDir"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::OpposedDirOnly", 
            "contents": "CBlockUnitModel::MultiDirEnum::OpposedDirOnly"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::PerpendicularDirsOnly", 
            "contents": "CBlockUnitModel::MultiDirEnum::PerpendicularDirsOnly"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::NextDirOnly", 
            "contents": "CBlockUnitModel::MultiDirEnum::NextDirOnly"
        }, 
        {
            "trigger": "CBlockUnitModel::MultiDirEnum::PreviousDirOnly", 
            "contents": "CBlockUnitModel::MultiDirEnum::PreviousDirOnly"
        }, 
        {
            "trigger": "Int3 CBlockUnitModel.Offset", 
            "contents": "Offset"
        }, 
        {
            "trigger": "CXmlRpcEvent", 
            "contents": "CXmlRpcEvent"
        }, 
        {
            "trigger": "CXmlRpcEvent::EType::Unknown", 
            "contents": "CXmlRpcEvent::EType::Unknown"
        }, 
        {
            "trigger": "CXmlRpcEvent::EType::Callback", 
            "contents": "CXmlRpcEvent::EType::Callback"
        }, 
        {
            "trigger": "CXmlRpcEvent::EType::CallbackArray", 
            "contents": "CXmlRpcEvent::EType::CallbackArray"
        }, 
        {
            "trigger": "EType CXmlRpcEvent.Type", 
            "contents": "Type"
        }, 
        {
            "trigger": "Text CXmlRpcEvent.Param1", 
            "contents": "Param1"
        }, 
        {
            "trigger": "Text CXmlRpcEvent.Param2", 
            "contents": "Param2"
        }, 
        {
            "trigger": "Text CXmlRpcEvent.ParamArray1", 
            "contents": "ParamArray1"
        }, 
        {
            "trigger": "CSmBlock", 
            "contents": "CSmBlock"
        }, 
        {
            "trigger": "CSmBase CSmBlock.Base", 
            "contents": "Base"
        }, 
        {
            "trigger": "CSmSector", 
            "contents": "CSmSector"
        }, 
        {
            "trigger": "CSmGauge", 
            "contents": "CSmGauge"
        }, 
        {
            "trigger": "Integer CSmGauge.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Real CSmGauge.ValueReal", 
            "contents": "ValueReal"
        }, 
        {
            "trigger": "Integer CSmGauge.Value", 
            "contents": "Value"
        }, 
        {
            "trigger": "Integer CSmGauge.Max", 
            "contents": "Max"
        }, 
        {
            "trigger": "Integer CSmGauge.Speed", 
            "contents": "Speed"
        }, 
        {
            "trigger": "CBlockModelClip", 
            "contents": "CBlockModelClip"
        }, 
        {
            "trigger": "CBlockModelClip::EnumClipType::ClassicClip", 
            "contents": "CBlockModelClip::EnumClipType::ClassicClip"
        }, 
        {
            "trigger": "CBlockModelClip::EnumClipType::FreeClipSide", 
            "contents": "CBlockModelClip::EnumClipType::FreeClipSide"
        }, 
        {
            "trigger": "CBlockModelClip::EnumClipType::FreeClipTop", 
            "contents": "CBlockModelClip::EnumClipType::FreeClipTop"
        }, 
        {
            "trigger": "CBlockModelClip::EnumClipType::FreeClipBottom", 
            "contents": "CBlockModelClip::EnumClipType::FreeClipBottom"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::SameDir", 
            "contents": "CBlockModelClip::MultiDirEnum::SameDir"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::SymmetricalDirs", 
            "contents": "CBlockModelClip::MultiDirEnum::SymmetricalDirs"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::AllDir", 
            "contents": "CBlockModelClip::MultiDirEnum::AllDir"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::OpposedDirOnly", 
            "contents": "CBlockModelClip::MultiDirEnum::OpposedDirOnly"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::PerpendicularDirsOnly", 
            "contents": "CBlockModelClip::MultiDirEnum::PerpendicularDirsOnly"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::NextDirOnly", 
            "contents": "CBlockModelClip::MultiDirEnum::NextDirOnly"
        }, 
        {
            "trigger": "CBlockModelClip::MultiDirEnum::PreviousDirOnly", 
            "contents": "CBlockModelClip::MultiDirEnum::PreviousDirOnly"
        }, 
        {
            "trigger": "CSmLandmark", 
            "contents": "CSmLandmark"
        }, 
        {
            "trigger": "Text CSmLandmark.Tag", 
            "contents": "Tag"
        }, 
        {
            "trigger": "Integer CSmLandmark.Order", 
            "contents": "Order"
        }, 
        {
            "trigger": "Vec3 CSmLandmark.Position", 
            "contents": "Position"
        }, 
        {
            "trigger": "Vec3 CSmLandmark.DirFront", 
            "contents": "DirFront"
        }, 
        {
            "trigger": "CSmBase", 
            "contents": "CSmBase"
        }, 
        {
            "trigger": "Integer CSmBase.Clan", 
            "contents": "Clan"
        }, 
        {
            "trigger": "Boolean CSmBase.IsActive", 
            "contents": "IsActive"
        }, 
        {
            "trigger": "Integer CSmBase.NumberOfCollectors", 
            "contents": "NumberOfCollectors"
        }
    ]
}